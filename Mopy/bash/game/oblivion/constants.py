# -*- coding: utf-8 -*-
#
# GPL License and Copyright Notice ============================================
#  This file is part of Wrye Bash.
#
#  Wrye Bash is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  Wrye Bash is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Wrye Bash; if not, write to the Free Software Foundation,
#  Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#  Wrye Bash copyright (C) 2005-2009 Wrye, 2010-2020 Wrye Bash Team
#  https://github.com/wrye-bash
#
# =============================================================================

#--Game ESM/ESP/BSA files
#  These filenames need to be in lowercase,
bethDataFiles = {
    #--Vanilla
    u'oblivion.esm',
    u'oblivion_1.1.esm',
    u'oblivion_si.esm',
    u'oblivion - meshes.bsa',
    u'oblivion - misc.bsa',
    u'oblivion - sounds.bsa',
    u'oblivion - textures - compressed.bsa',
    u'oblivion - textures - compressed.bsa.orig',
    u'oblivion - voices1.bsa',
    u'oblivion - voices2.bsa',
    #--Shivering Isles
    u'dlcshiveringisles.esp',
    u'dlcshiveringisles - meshes.bsa',
    u'dlcshiveringisles - sounds.bsa',
    u'dlcshiveringisles - textures.bsa',
    u'dlcshiveringisles - voices.bsa',
}

# Function Info ---------------------------------------------------------------
# 0: no param; 1: int param; 2: formid param; 3: float param
condition_function_data = {
    1:    (u'GetDistance', 2, 0),
    5:    (u'GetLocked', 0, 0),
    6:    (u'GetPos', 1, 0),
    8:    (u'GetAngle', 1, 0),
    10:   (u'GetStartingPos', 1, 0),
    11:   (u'GetStartingAngle', 1, 0),
    12:   (u'GetSecondsPassed', 0, 0),
    14:   (u'GetActorValue', 1, 0),
    18:   (u'GetCurrentTime', 0, 0),
    24:   (u'GetScale', 0, 0),
    27:   (u'GetLineOfSight', 2, 0),
    32:   (u'GetInSameCell', 2, 0),
    35:   (u'GetDisabled', 0, 0),
    36:   (u'MenuMode', 1, 0),
    39:   (u'GetDisease', 0, 0),
    40:   (u'GetVampire', 0, 0),
    41:   (u'GetClothingValue', 0, 0),
    42:   (u'SameFaction', 2, 0),
    43:   (u'SameRace', 2, 0),
    44:   (u'SameSex', 2, 0),
    45:   (u'GetDetected', 2, 0),
    46:   (u'GetDead', 0, 0),
    47:   (u'GetItemCount', 2, 0),
    48:   (u'GetGold', 0, 0),
    49:   (u'GetSleeping', 0, 0),
    50:   (u'GetTalkedToPC', 0, 0),
    53:   (u'GetScriptVariable', 2, 1),
    56:   (u'GetQuestRunning', 2, 0),
    58:   (u'GetStage', 2, 0),
    59:   (u'GetStageDone', 2, 1),
    60:   (u'GetFactionRankDifference', 2, 2),
    61:   (u'GetAlarmed', 0, 0),
    62:   (u'IsRaining', 0, 0),
    63:   (u'GetAttacked', 0, 0),
    64:   (u'GetIsCreature', 0, 0),
    65:   (u'GetLockLevel', 0, 0),
    66:   (u'GetShouldAttack', 2, 0),
    67:   (u'GetInCell', 2, 0),
    68:   (u'GetIsClass', 2, 0),
    69:   (u'GetIsRace', 2, 0),
    70:   (u'GetIsSex', 1, 0),
    71:   (u'GetInFaction', 2, 0),
    72:   (u'GetIsID', 2, 0),
    73:   (u'GetFactionRank', 2, 0),
    74:   (u'GetGlobalValue', 2, 0),
    75:   (u'IsSnowing', 0, 0),
    76:   (u'GetDisposition', 2, 0),
    77:   (u'GetRandomPercent', 0, 0),
    79:   (u'GetQuestVariable', 2, 1),
    80:   (u'GetLevel', 0, 0),
    81:   (u'GetArmorRating', 0, 0),
    84:   (u'GetDeadCount', 2, 0),
    91:   (u'GetIsAlerted', 0, 0),
    98:   (u'GetPlayerControlsDisabled', 0, 0),
    99:   (u'GetHeadingAngle', 2, 0),
    101:  (u'IsWeaponOut', 0, 0),
    102:  (u'IsTorchOut', 0, 0),
    103:  (u'IsShieldOut', 0, 0),
    104:  (u'IsYielding', 0, 0),
    106:  (u'IsFacingUp', 0, 0),
    107:  (u'GetKnockedState', 0, 0),
    108:  (u'GetWeaponAnimType', 0, 0),
    109:  (u'GetWeaponSkillType', 0, 0),
    110:  (u'GetCurrentAIPackage', 0, 0),
    111:  (u'IsWaiting', 0, 0),
    112:  (u'IsIdlePlaying', 0, 0),
    116:  (u'GetCrimeGold', 0, 0),
    122:  (u'GetCrime', 2, 1),
    125:  (u'IsGuard', 0, 0),
    127:  (u'CanPayCrimeGold', 0, 0),
    128:  (u'GetFatiguePercentage', 0, 0),
    129:  (u'GetPCIsClass', 2, 0),
    130:  (u'GetPCIsRace', 2, 0),
    131:  (u'GetPCIsSex', 1, 0),
    132:  (u'GetPCInFaction', 2, 0),
    133:  (u'SameFactionAsPC', 0, 0),
    134:  (u'SameRaceAsPC', 0, 0),
    135:  (u'SameSexAsPC', 0, 0),
    136:  (u'GetIsReference', 2, 0),
    141:  (u'IsTalking', 0, 0),
    142:  (u'GetWalkSpeed', 0, 0),
    143:  (u'GetCurrentAIProcedure', 0, 0),
    144:  (u'GetTrespassWarningLevel', 0, 0),
    145:  (u'IsTrespassing', 0, 0),
    146:  (u'IsInMyOwnedCell', 0, 0),
    147:  (u'GetWindSpeed', 0, 0),
    148:  (u'GetCurrentWeatherPercent', 0, 0),
    149:  (u'GetIsCurrentWeather', 2, 0),
    150:  (u'IsContinuingPackagePCNear', 0, 0),
    153:  (u'CanHaveFlames', 0, 0),
    154:  (u'HasFlames', 0, 0),
    157:  (u'GetOpenState', 0, 0),
    159:  (u'GetSitting', 0, 0),
    160:  (u'GetFurnitureMarkerID', 0, 0),
    161:  (u'GetIsCurrentPackage', 2, 0),
    162:  (u'IsCurrentFurnitureRef', 2, 0),
    163:  (u'IsCurrentFurnitureObj', 2, 0),
    170:  (u'GetDayOfWeek', 0, 0),
    171:  (u'IsPlayerInJail', 0, 0),
    172:  (u'GetTalkedToPCParam', 2, 0),
    175:  (u'IsPCSleeping', 0, 0),
    176:  (u'IsPCAMurderer', 0, 0),
    180:  (u'GetDetectionLevel', 2, 0),
    182:  (u'GetEquipped', 2, 0),
    185:  (u'IsSwimming', 0, 0),
    190:  (u'GetAmountSoldStolen', 0, 0),
    193:  (u'GetPCExpelled', 2, 0),
    195:  (u'GetPCFactionMurder', 2, 0),
    197:  (u'GetPCFactionSteal', 2, 0),
    199:  (u'GetPCFactionAttack', 2, 0),
    201:  (u'GetPCFactionSubmitAuthority', 2, 0),
    203:  (u'GetDestroyed', 0, 0),
    214:  (u'HasMagicEffect', 2, 0),
    215:  (u'GetDoorDefaultOpen', 0, 0),
    223:  (u'IsSpellTarget', 2, 0),
    224:  (u'GetIsPlayerBirthsign', 2, 0),
    225:  (u'GetPersuasionNumber', 0, 0),
    227:  (u'HasVampireFed', 0, 0),
    228:  (u'GetIsClassDefault', 2, 0),
    229:  (u'GetClassDefaultMatch', 0, 0),
    230:  (u'GetInCellParam', 2, 2),
    237:  (u'GetIsGhost', 0, 0),
    242:  (u'GetUnconscious', 0, 0),
    244:  (u'GetRestrained', 0, 0),
    246:  (u'GetIsUsedItem', 2, 0),
    247:  (u'GetIsUsedItemType', 1, 0),
    249:  (u'GetPCFame', 0, 0),
    251:  (u'GetPCInfamy', 0, 0),
    254:  (u'GetIsPlayableRace', 0, 0),
    255:  (u'GetOffersServicesNow', 0, 0),
    258:  (u'GetUsedItemLevel', 0, 0),
    259:  (u'GetUsedItemActivate', 0, 0),
    264:  (u'GetBarterGold', 0, 0),
    265:  (u'IsTimePassing', 0, 0),
    266:  (u'IsPleasant', 0, 0),
    267:  (u'IsCloudy', 0, 0),
    274:  (u'GetArmorRatingUpperBody', 0, 0),
    277:  (u'GetBaseActorValue', 1, 0),
    278:  (u'IsOwner', 2, 0),
    280:  (u'IsCellOwner', 2, 2),
    282:  (u'IsHorseStolen', 0, 0),
    285:  (u'IsLeftUp', 0, 0),
    286:  (u'IsSneaking', 0, 0),
    287:  (u'IsRunning', 0, 0),
    288:  (u'GetFriendHit', 2, 0),
    289:  (u'IsInCombat', 0, 0),
    300:  (u'IsInInterior', 0, 0),
    305:  (u'GetInvestmentGold', 0, 0),
    306:  (u'IsActorUsingATorch', 0, 0),
    309:  (u'IsXBox', 0, 0),
    310:  (u'GetInWorldspace', 2, 0),
    312:  (u'GetPCMiscStat', 1, 0),
    313:  (u'IsActorEvil', 0, 0),
    314:  (u'IsActorAVictim', 0, 0),
    315:  (u'GetTotalPersuasionNumber', 0, 0),
    318:  (u'GetIdleDoneOnce', 0, 0),
    320:  (u'GetNoRumors', 0, 0),
    323:  (u'WhichServiceMenu', 0, 0),
    327:  (u'IsRidingHorse', 0, 0),
    329:  (u'IsTurnArrest', 0, 0),
    332:  (u'IsInDangerousWater', 0, 0),
    338:  (u'GetIgnoreFriendlyHits', 0, 0),
    339:  (u'IsPlayersLastRiddenHorse', 0, 0),
    353:  (u'IsActor', 0, 0),
    354:  (u'IsEssential', 0, 0),
    358:  (u'IsPlayerMovingIntoNewSpace', 0, 0),
    361:  (u'GetTimeDead', 0, 0),
    362:  (u'GetPlayerHasLastRiddenHorse', 0, 0),
    365:  (u'GetPlayerInSEWorld', 0, 0),

    # extended by OBSE
    1107: (u'IsAmmo', 1, 0),
    1884: (u'GetPCTrainingSessionsUsed', 2, 0),
    2213: (u'GetPackageOffersServices', 2, 0),
    2214: (u'GetPackageMustReachLocation', 2, 0),
    2215: (u'GetPackageMustComplete', 2, 0),
    2216: (u'GetPackageLockDoorsAtStart', 2, 0),
    2217: (u'GetPackageLockDoorsAtEnd', 2, 0),
    2218: (u'GetPackageLockDoorsAtLocation', 2, 0),
    2219: (u'GetPackageUnlockDoorsAtStart', 2, 0),
    2220: (u'GetPackageUnlockDoorsAtEnd', 2, 0),
    2221: (u'GetPackageUnlockDoorsAtLocation', 2, 0),
    2222: (u'GetPackageContinueIfPCNear', 2, 0),
    2223: (u'GetPackageOncePerDay', 2, 0),
    2224: (u'GetPackageSkipFalloutBehavior', 2, 0),
    2225: (u'GetPackageAlwaysRun', 2, 0),
    2226: (u'GetPackageAlwaysSneak', 2, 0),
    2227: (u'GetPackageAllowSwimming', 2, 0),
    2228: (u'GetPackageAllowFalls', 2, 0),
    2229: (u'GetPackageArmorUnequipped', 2, 0),
    2230: (u'GetPackageWeaponsUnequipped', 2, 0),
    2231: (u'GetPackageDefensiveCombat', 2, 0),
    2232: (u'GetPackageUseHorse', 2, 0),
    2233: (u'GetPackageNoIdleAnims', 2, 0),
}

# Known record types
save_rec_types = {
    6 : _(u'Faction'),
    19: _(u'Apparatus'),
    20: _(u'Armor'),
    21: _(u'Book'),
    22: _(u'Clothing'),
    25: _(u'Ingredient'),
    26: _(u'Light'),
    27: _(u'Misc. Item'),
    33: _(u'Weapon'),
    35: _(u'NPC'),
    36: _(u'Creature'),
    39: _(u'Key'),
    40: _(u'Potion'),
    48: _(u'Cell'),
    49: _(u'Object Ref'),
    50: _(u'NPC Ref'),
    51: _(u'Creature Ref'),
    58: _(u'Dialog Entry'),
    59: _(u'Quest'),
    61: _(u'AI Package'),
}

#--List of GMST's in the main plugin (Oblivion.esm) that have 0x00000000
#  as the form id.  Any GMST as such needs it Editor Id listed here.
gmstEids = [
    'fAbsorbBoltGrowWidth', 'fAbsorbBoltSmallWidth', 'fAbsorbBoltsRadius',
    'fAbsorbBoltsRadiusStrength', 'fAbsorbMoveSpeed', 'fAbsorbSegmentLength',
    'fAbsorbSegmentVariance', 'fAbsorbTortuosityVariance', 'fActorAnimZAdjust',
    'fActorArmorDesirabilitySkillMult', 'fActorLuckSkillMult',
    'fActorSwimBreathDamage', 'fActorTurnAnimMinTime',
    'fActorWeaponDesirabilityDamageMult', 'fActorWeaponDesirabilitySkillMult',
    'fAIAcquireObjectDistance', 'fAiAquireKillBase', 'fAiAquireKillMult',
    'fAiAquirePickBase', 'fAiAquirePickMult', 'fAiAquireStealBase',
    'fAiAquireStealMult', 'fAIAwareofPlayerTimer', 'fAIBestHeadTrackDistance',
    'fAICombatFleeScoreThreshold', 'fAICombatNoAreaEffectAllyDistance',
    'fAICombatNoTargetLOSPriorityMult', 'fAICombatSlopeDifference',
    'fAICombatTargetUnreachablePriorityMult',
    'fAICombatUnreachableTargetPriorityMult', 'fAIConversationExploreTime',
    'fAIDefaultAttackDuringAttackMult', 'fAIDefaultAttackDuringBlockMult',
    'fAIDefaultAttackDuringUnconsciousBonus', 'fAIDefaultAttackHandBonus',
    'fAIDefaultAttackNoAttackMult', 'fAIDefaultAttackSkillBase',
    'fAIDefaultBlockSkillBase', 'fAIDefaultBuffStandoffDistance',
    'fAIDefaultDodgeBackDuringAttackMult', 'fAIDefaultDodgeBackNoAttackMult',
    'fAIDefaultDodgeBackwardMaxTime', 'fAIDefaultDodgeBackwardMinTime',
    'fAIDefaultDodgeDuringAttackMult', 'fAIDefaultDodgeFatigueBase',
    'fAIDefaultDodgeFatigueMult', 'fAIDefaultDodgeForwardMaxTime',
    'fAIDefaultDodgeForwardMinTime', 'fAIDefaultDodgeForwardNotAttackingMult',
    'fAIDefaultDodgeForwardWhileAttackingMult',
    'fAIDefaultDodgeLeftRightMaxTime', 'fAIDefaultDodgeLeftRightMinTime',
    'fAIDefaultDodgeNoAttackMult', 'fAIDefaultDodgeSpeedBase',
    'fAIDefaultDodgeSpeedMult', 'fAIDefaultGroupStandoffDistance',
    'fAIDefaultHoldMaxTime', 'fAIDefaultHoldMinTime', 'fAIDefaultIdleMaxTime',
    'fAIDefaultIdleMinTime', 'fAIDefaultMaximumRangeMult',
    'fAIDefaultOptimalRangeMult', 'fAIDefaultPowerAttackFatigueBase',
    'fAIDefaultPowerAttackFatigueMult',
    'fAIDefaultPowerAttackRecoilStaggerBonus',
    'fAIDefaultPowerAttackUnconsciousBonus',
    'fAIDefaultRangedStandoffDistance', 'fAIDefaultRushingAttackDistanceMult',
    'fAIDefaultSpeechMult', 'fAIDefaultSwitchToMeleeDistance',
    'fAIDefaultSwitchToRangedDistance', 'fAIDodgeDecisionBase',
    'fAIDodgeFavorLeftRightMult', 'fAIDodgeVerticalRangedAttackMult',
    'fAIDodgeWalkChance', 'fAIEnergyLevelBase', 'fAIEngergyLevelMult',
    'fAIEscortWaitDistanceExterior', 'fAIEscortWaitDistanceInterior',
    'fAIExteriorSpectatorDetection', 'fAIExteriorSpectatorDistance',
    'fAIFaceTargetAnimationAngle', 'fAIFleeConfMult', 'fAIFleeSuccessTimeout',
    'fAIGreetingTimer', 'fAIIdleAnimationDistance', 'fAIIdleWaitTime',
    'fAIInteriorHeadTrackMult', 'fAIInteriorSpectatorDetection',
    'fAIInteriorSpectatorDistance', 'fAIMagicSpellMult', 'fAIMagicTimer',
    'fAIMaxHeadTrackDistanceFromPC', 'fAIMaxWanderTime', 'fAIMeleeArmorMult',
    'fAIMeleeHandMult', 'fAIMeleeWeaponMult', 'fAIMinGreetingDistance',
    'fAIMoveDistanceToRecalcFollowPath', 'fAINPCSpeechMult',
    'fAIPowerAttackCreatureChance', 'fAIPowerAttackFatigueBase',
    'fAIPowerAttackFatigueMult', 'fAIPowerAttackKnockdownBonus',
    'fAIPowerAttackNPCChance', 'fAIPursueDistanceLineOfSight',
    'fAIRadiusToRunDetectionExterior', 'fAIRadiusToRunDetectionInterior',
    'fAIRangedWeaponMult', 'fAIRangMagicSpellMult',
    'fAISocialchanceForConversationInterior',
    'fAISocialRadiusToTriggerConversationInterior', 'fAISpectatorCommentTimer',
    'fAItalktoNPCtimer', 'fAItalktosameNPCtimer',
    'fAIUpdateMovementRestrictionsDistance', 'fAIYieldDurationBase',
    'fAIYieldDurationMult', 'fAIYieldMult', 'fAlchemyGoldMult',
    'fArmorRatingBase', 'fArmorRatingConditionBase',
    'fArmorRatingConditionMult', 'fArmorRatingMax', 'fArmorWeightLightMaxMod',
    'fArrowAgeMax', 'fArrowBounceBlockPercentage', 'fArrowBounceLinearSpeed',
    'fArrowBounceRotateSpeed', 'fArrowBowTimerBase', 'fArrowBowTimerMult',
    'fArrowFakeMass', 'fArrowFOVTimeChange', 'fArrowFOVTimeStart',
    'fArrowFOVZoom', 'fArrowGravityBase', 'fArrowGravityMin',
    'fArrowGravityMult', 'fArrowMaxDistance', 'fArrowOptimalDistance',
    'fArrowSpeedMult', 'fArrowWeakGravity', 'fArrowWeakSpeed',
    'fAttributeClassPrimaryBonus', 'fAttributeClassSecondaryBonus',
    'fBarterBuyBase', 'fBarterBuyMult', 'fBarterDispBase',
    'fBarterDispositionMod', 'fBarterHaggleBase', 'fBarterHaggleCurve',
    'fBarterHaggleDispMult', 'fBarterHaggleMax', 'fBarterSellMult',
    'fBlinkDelayMax', 'fBlinkDelayMin', 'fBlinkDownTime', 'fBlinkUpTime',
    'fBlockAmountHandToHandMult', 'fBlockAmountWeaponMult', 'fBlockMax',
    'fBlockScoreNoShieldMult', 'fBlockSkillBase', 'fBlockSkillMult',
    'fBowHoldTimer', 'fBribeCostCurve', 'fBribeMult', 'fBribeNPCLevelMult',
    'fBribeSpeechcraftMult', 'fBuoyancyCloth', 'fBuoyancyDirt',
    'fBuoyancyGlass', 'fBuoyancyGrass', 'fBuoyancyMetal', 'fBuoyancyMultBody',
    'fBuoyancyMultExtremity', 'fBuoyancyOrganic', 'fBuoyancySkin',
    'fBuoyancyStone', 'fBuoyancyWater', 'fBuoyancyWood',
    'fChameleonMaxRefraction', 'fChameleonMinRefraction',
    'fCharacterControllerMultipleStepSpeed', 'fChase3rdPersonVanityXYMult',
    'fChase3rdPersonZUnitsPerSecond', 'fCheckDeadBodyTimer',
    'fCheckPositionFallDistance', 'fClothingArmorBase', 'fClothingArmorScale',
    'fClothingBase', 'fCombatAdvanceNormalAttackChance',
    'fCombatBetweenAdvanceTimer', 'fCombatBuffMaxTimer',
    'fCombatBuffStandoffTimer', 'fCombatCollectAlliesTimer',
    'fCombatDamageScale', 'fCombatDistance', 'fCombatDistanceMin',
    'fCombatForwardAttackChance', 'fCombatInTheWayTimer',
    'fCombatLineOfSightTimer', 'fCombatMaxHoldScore',
    'fCombatMinEngageDistance', 'fCombatMonitorBuffsTimer',
    'fCombatRangedStandoffTimer', 'fCombatRelativeDamageMod',
    'fCombatRoundAmount', 'fCombatSpeakTauntChance', 'fCombatStaffTimer',
    'fCombatStepAdvanceDistance', 'fCombatVulnerabilityMod',
    'fCreatureCalcCombat', 'fCreatureCalcDamage', 'fCreatureCalcMagic',
    'fCreatureCalcStealth', 'fCrimeDispAttack', 'fCrimeDispMurder',
    'fCrimeDispPersonal', 'fCrimeDispPickpocket', 'fCrimeDispSteal',
    'fCrimeDispTresspass', 'fCrimeGoldSteal', 'fCrimeSoundBase',
    'fCrimeSoundMult', 'fDamageSkillBase', 'fDamageSneakAttackMult',
    'fDeathForceDamageMax', 'fDeathForceDamageMin', 'fDeathForceForceMax',
    'fDeathForceForceMin', 'fDeathSoundMaxDistance', 'fDebrisMaxVelocity',
    'fDebrisMinExtent', 'fDefaultNoticeTextDisplayTime', 'fDemandBase',
    'fDemandMult', 'fDetectionActionTimer', 'fDetectionNightEyeBonus',
    'fDetectionTimerSetting', 'fDifficultyDefaultValue', 'fDifficultyMaxValue',
    'fDifficultyMinValue', 'fDispActorBountyBase', 'fDispActorBountyMult',
    'fDispActorInfamyBase', 'fDispActorInfamyMult', 'fDispActorPerBase',
    'fDispInfamyMax', 'fDispositionReduction', 'fDispTargetBountyMult',
    'fDispTargetDiseaseBase', 'fDispTargetFactionMult',
    'fDispTargetFactionRankMult', 'fDispTargetFameMult',
    'fDispTargetInfamyMult', 'fDispTargetPerBase', 'fDispTargetRaceMult',
    'fDispTargetWeaponBase', 'fDistanceExteriorReactCombat',
    'fDistanceInteriorReactCombat', 'fDistancetoPlayerforConversations',
    'fEnchantCommonLimit', 'fEnchantGrandLimit', 'fEnchantGreaterLimit',
    'fEnchantLesserLimit', 'fEnchantmentEffectPointsMult',
    'fEnchantmentPointsMult', 'fEnchantPettyLimit', 'fEnemyHealthBarTimer',
    'fEssentialDeathTime', 'fEssentialHealthPercentReGain',
    'fExpressionChangePerSec', 'fExpressionStrengthAdd',
    'fFadeToBlackFadeSeconds', 'fFatigueBlockBase', 'fFatigueBlockMult',
    'fFatigueCastMult', 'fFightAbleToDetectTimer', 'fFightAggrMult',
    'fFightDispBase', 'fFightDispMult', 'fFightDistanceBase',
    'fFightDistanceMult', 'fFightFriendDispMult', 'fFirstPersonHandFollowMult',
    'fFirstPersonScaleSeconds', 'fFleeDistanceExterior',
    'fFleeDistanceInterior', 'fFleeIsSafeTimer', 'fFriendHitTimer',
    'fFurnitureMarker05DeltaX', 'fFurnitureMarker05DeltaY',
    'fFurnitureMarker05DeltaZ', 'fFurnitureMarker05HeadingDelta',
    'fFurnitureMarker06DeltaX', 'fFurnitureMarker06DeltaY',
    'fFurnitureMarker06DeltaZ', 'fFurnitureMarker06HeadingDelta',
    'fFurnitureMarker07DeltaX', 'fFurnitureMarker07DeltaY',
    'fFurnitureMarker07DeltaZ', 'fFurnitureMarker07HeadingDelta',
    'fFurnitureMarker08DeltaX', 'fFurnitureMarker08DeltaY',
    'fFurnitureMarker08DeltaZ', 'fFurnitureMarker08HeadingDelta',
    'fFurnitureMarker09DeltaX', 'fFurnitureMarker09DeltaY',
    'fFurnitureMarker09DeltaZ', 'fFurnitureMarker09HeadingDelta',
    'fFurnitureMarker10DeltaX', 'fFurnitureMarker10DeltaY',
    'fFurnitureMarker10DeltaZ', 'fFurnitureMarker10HeadingDelta',
    'fFurnitureMarker15DeltaX', 'fFurnitureMarker15DeltaY',
    'fFurnitureMarker15DeltaZ', 'fFurnitureMarker15HeadingDelta',
    'fFurnitureMarker16DeltaX', 'fFurnitureMarker16DeltaY',
    'fFurnitureMarker16DeltaZ', 'fFurnitureMarker16HeadingDelta',
    'fFurnitureMarker17DeltaX', 'fFurnitureMarker17DeltaY',
    'fFurnitureMarker17DeltaZ', 'fFurnitureMarker17HeadingDelta',
    'fFurnitureMarker18DeltaX', 'fFurnitureMarker18DeltaY',
    'fFurnitureMarker18DeltaZ', 'fFurnitureMarker18HeadingDelta',
    'fFurnitureMarker19DeltaX', 'fFurnitureMarker19DeltaY',
    'fFurnitureMarker19DeltaZ', 'fFurnitureMarker19HeadingDelta',
    'fFurnitureMarker20DeltaX', 'fFurnitureMarker20DeltaY',
    'fFurnitureMarker20DeltaZ', 'fFurnitureMarker20HeadingDelta', 'fGrabPower',
    'fHandDamageSkillBase', 'fHandDamageSkillMult', 'fHandDamageStrengthBase',
    'fHandDamageStrengthMult', 'fHandHealthMin',
    'fHostileActorExteriorDistance', 'fHostileActorInteriorDistance',
    'fImpactShaderMaxDistance', 'fImpactShaderMinMagnitude',
    'fInventoryDropTimer', 'fItemPointsMult', 'fJumpFallRiderMult',
    'fJumpFallSkillBase', 'fJumpFallSkillMult', 'fJumpFallTimeBase',
    'fJumpFallTimeMin', 'fJumpFallVelocityMin', 'fJumpHeightMin',
    'fJumpMoveBase', 'fJumpMoveMult', 'fKnockbackAgilBase',
    'fKnockbackAgilMult', 'fKnockbackDamageBase', 'fKnockbackDamageMult',
    'fKnockbackForceMax', 'fKnockbackTime', 'fKnockdownAgilBase',
    'fKnockdownAgilMult', 'fKnockdownDamageBase', 'fLeveledLockMult',
    'fLockLevelBase', 'fLockLevelMult', 'fLockPickAutoOffset',
    'fLockPickBreakBase', 'fLockPickBreakMult', 'fLockPickQualityBase',
    'fLockPickQualityMult', 'fLockSkillBase', 'fLockSkillMult',
    'fLockTrapGoOffBase', 'fLockTrapGoOffMult', 'fLowActorSpeedBoost',
    'fMagicAbsorbDistanceReachMult', 'fMagicAreaBaseCostMult',
    'fMagicAreaScale', 'fMagicAreaScaleMax', 'fMagicAreaScaleMin',
    'fMagicArmorPenaltyMax', 'fMagicArmorPenaltyMin',
    'fMagicBallMaximumDistance', 'fMagicBallOptimalDistance',
    'fMagicBoltDuration', 'fMagicBoltMaximumDistance',
    'fMagicBoltOptimalDistance', 'fMagicBoltSegmentLength',
    'fMagicCEEnchantMagOffset', 'fMagicCloudAreaMin', 'fMagicCloudDurationMin',
    'fMagicCloudFindTargetTime', 'fMagicCloudLifeScale',
    'fMagicCloudSizeScale', 'fMagicCloudSlowdownRate', 'fMagicCloudSpeedBase',
    'fMagicCloudSpeedScale', 'fMagicDefaultCEBarterFactor',
    'fMagicDefaultCEEnchantFactor', 'fMagicDefaultTouchDistance',
    'fMagicDiseaseTransferBase', 'fMagicDispelMagnitudeMult',
    'fMagicDurMagBaseCostMult', 'fMagicEnchantmentChargeBase',
    'fMagicEnchantmentChargeMult', 'fMagicEnchantmentDrainBase',
    'fMagicEnchantmentDrainMult', 'fMagicExplosionClutterMult',
    'fMagicExplosionIncorporealMult', 'fMagicExplosionIncorporealTime',
    'fMagicExplosionPowerBase', 'fMagicExplosionPowerMax',
    'fMagicExplosionPowerMin', 'fMagicExplosionPowerMult',
    'fMagicLevelMagnitudeMult', 'fMagicLightForwardOffset',
    'fMagicNightEyeAmbient', 'fMagicPlayerMinimumInvisibility',
    'fMagicProjectileBaseSpeed', 'fMagicProjectileMaxDistance',
    'fMagicRangeTargetCostMult', 'fMagicResistActorSkillBase',
    'fMagicResistActorSkillMult', 'fMagicResistTargetWillpowerBase',
    'fMagicResistTargetWillpowerMult', 'fMagicSpellLevelCostBase',
    'fMagicSpellLevelCostMult', 'fMagicSprayMaximumDistance',
    'fMagicSprayOptimalDistance', 'fMagicSunDamageBaseDamage',
    'fMagicSunDamageMinWeather', 'fMagicSunDamagePainInitialDelay',
    'fMagicSunDamagePainTimer', 'fMagicSunDamageScreenGlowMult',
    'fMagicSunDamageScreenGlowRateDown', 'fMagicSunDamageScreenGlowRateUp',
    'fMagicSunDamageSunHiddenScale', 'fMagicSunDamageWaterScale',
    'fMagicTelekinesisComplexMaxForce',
    'fMagicTelekinesisComplexObjectDamping',
    'fMagicTelekinesisComplexSpringDamping',
    'fMagicTelekinesisComplexSpringElasticity', 'fMagicTelekinesisDistanceMin',
    'fMagicTelekinesisMaxForce', 'fMagicTelekinesisMoveAccelerate',
    'fMagicTelekinesisMoveBase', 'fMagicTelekinesisMoveMax',
    'fMagicTelekinesisObjectDamping', 'fMagicTelekinesisSpringDamping',
    'fMagicTelekinesisSpringElasticity', 'fMagicTelekinesisThrow',
    'fMagicTrackingLimit', 'fMagicTrackingLimitComplex',
    'fMagicTrackingMultBall', 'fMagicTrackingMultBolt',
    'fMagicTrackingMultFog', 'fMagicUnitsPerFoot',
    'fMarksmanFatigueBurnPerSecond', 'fMarksmanFatigueBurnPerShot',
    'fMasserSpeed', 'fMasserZOffset', 'fMaximumWind', 'fMinDistanceUseHorse',
    'fMountedMaxLookingDown', 'fMoveEncumEffectNoWea', 'fMoveMaxFlySpeed',
    'fMoveMinFlySpeed', 'fMoveRunAthleticsMult', 'fMoveSwimRunAthleticsMult',
    'fMoveSwimRunBase', 'fMoveSwimWalkAthleticsMult', 'fMoveSwimWalkBase',
    'fMoveWeightMin', 'fNoticeTextTimePerCharacter', 'fObjectHitWeaponReach',
    'fObjectWeightPickupDetectionMult', 'fPainDelay',
    'fPathAvoidanceObstacleCheckTimeLimit', 'fPathAvoidanceTimeOut',
    'fPathAvoidanceWaitTimeLimit', 'fPathImpassableDoorPenalty',
    'fPathInvalidMovementTypePenalty', 'fPathMinimalUseDoorPenalty',
    'fPathMustLockpickPenalty', 'fPathNonFishSwimmingPenalty',
    'fPathNPCWadingPenalty', 'fPathPointFailureTimeLimit',
    'fPathPointForceAngleSnapDistance',
    'fPathPointMaxAngleDeltaTurnSpeedScalar', 'fPathPointReachDistance',
    'fPathPointReachDistanceError', 'fPathPointStartCheckDistance',
    'fPathPointTurnDistanceExterior', 'fPathPointTurnDistanceInterior',
    'fPathPointTurningSpeed', 'fPathPointWalkTime',
    'fPathPointZDistanceAllowance', 'fPathPreferredPointBonus',
    'fPathSpaceExitPenalty', 'fPathWaterExitPenalty', 'fPCBaseHealthMult',
    'fPCTurnAnimDeltaThreshold', 'fPCTurnAnimMinTime',
    'fPerkAthleticsApprenticeFatigueMult', 'fPerkAthleticsExpertFatigueMult',
    'fPerkAthleticsJourneymanFatigueMult', 'fPerkAthleticsMasterFatigueMult',
    'fPerkAthleticsNoviceFatigueMult', 'fPerkHeavyArmorExpertSpeedMult',
    'fPerkHeavyArmorJourneymanDamageMult', 'fPerkHeavyArmorMasterSpeedMult',
    'fPerkHeavyArmorNoviceDamageMult', 'fPerkHeavyArmorSinkGravityMult',
    'fPerkJumpFatigueExpertMult', 'fPerkLightArmorExpertSpeedMult',
    'fPerkLightArmorJourneymanDamageMult', 'fPerkLightArmorMasterRatingMult',
    'fPerkLightArmorNoviceDamageMult', 'fPerkSneakAttackMeleeApprenticeMult',
    'fPerkSneakAttackMeleeExpertMult', 'fPerkSneakAttackMeleeJourneymanMult',
    'fPerkSneakAttackMeleeMasterMult', 'fPerkSneakAttackMeleeNoviceMult',
    'fPersAdmireAggr', 'fPersAdmireConf', 'fPersAdmireEner',
    'fPersAdmireIntel', 'fPersAdmirePers', 'fPersAdmireResp',
    'fPersAdmireStre', 'fPersAdmireWillp', 'fPersBoastAggr', 'fPersBoastConf',
    'fPersBoastEner', 'fPersBoastIntel', 'fPersBoastPers', 'fPersBoastResp',
    'fPersBoastStre', 'fPersBoastWillp', 'fPersBullyAggr', 'fPersBullyConf',
    'fPersBullyEner', 'fPersBullyIntel', 'fPersBullyPers', 'fPersBullyResp',
    'fPersBullyStre', 'fPersBullyWillp', 'fPersJokeAggr', 'fPersJokeConf',
    'fPersJokeEner', 'fPersJokeIntel', 'fPersJokePers', 'fPersJokeResp',
    'fPersJokeStre', 'fPersJokeWillp', 'fPersuasionAccuracyMaxDisposition',
    'fPersuasionAccuracyMaxSelect', 'fPersuasionAccuracyMinDispostion',
    'fPersuasionAccuracyMinSelect', 'fPersuasionBaseValueMaxDisposition',
    'fPersuasionBaseValueMaxSelect', 'fPersuasionBaseValueMinDispostion',
    'fPersuasionBaseValueMinSelect', 'fPersuasionBaseValueShape',
    'fPersuasionMaxDisposition', 'fPersuasionMaxInput', 'fPersuasionMaxSelect',
    'fPersuasionMinDispostion', 'fPersuasionMinInput',
    'fPersuasionMinPercentCircle', 'fPersuasionMinSelect',
    'fPersuasionReactionHatePerk', 'fPersuasionReactionLike',
    'fPersuasionReactionLove', 'fPersuasionShape', 'fPickLevelBase',
    'fPickLevelMult', 'fPickNumBase', 'fPickNumMult', 'fPickPocketAmountBase',
    'fPickPocketMinChance', 'fPickPocketTargetSkillBase', 'fPickSpring1',
    'fPickSpring2', 'fPickSpring3', 'fPickSpring4', 'fPickSpring5',
    'fPickUpWeaponDelay', 'fPlayerDropDistance', 'fPlayerTeleportFadeSeconds',
    'fPotionMortPestleMult', 'fPotionT1CalMagMult', 'fPotionT1MagMult',
    'fPotionT1RetMagMult', 'fPotionT2CalDurMult', 'fPotionT2RetDurMult',
    'fPotionT3CalMagMult', 'fPotionT3RetMagMult', 'fPowerAttackDelay',
    'fProjectileCollisionImpulseScale', 'fProjectileKnockMinMass',
    'fProjectileKnockMultBiped', 'fProjectileKnockMultClutter',
    'fProjectileKnockMultProp', 'fProjectileKnockMultTrap',
    'fProjectileMaxDistance', 'fQuickKeyDownTimer', 'fRaceGeneticVariation',
    'fRandomDoorDistance', 'fReEquipArmorTime',
    'fReflectedAbsorbChanceReduction', 'fRegionGenNoiseFactor',
    'fRegionGenTreeSinkPower', 'fRegionObjectDensityPower',
    'fRemoteCombatMissedAttack', 'fRemoveExcessComplexDeadTime',
    'fRemoveExcessDeadTime', 'fRepairArmorerBase',
    'fRepairBreakApprenticeMult', 'fRepairCostMult', 'fRepairSkillBreakBase',
    'fRepairSkillBreakMult', 'fRepairStrengthMult', 'fRoadPointReachDistance',
    'fRumbleBlockStrength', 'fRumbleBlockTime', 'fRumbleHitBlockedStrength',
    'fRumbleHitBlockedTime', 'fRumbleHitStrength', 'fRumbleHitTime',
    'fRumblePainStrength', 'fRumblePainTime', 'fRumbleStruckStrength',
    'fRumbleStruckTime', 'fScrollCostMult', 'fSDRsDetTargOnHorseMult',
    'fSDRsLOSmpMult', 'fSDRsPeripheralScaling', 'fSDRsSkillCrimeGoldMult',
    'fSDRsSkillCVmult', 'fSDRsSkillEffectiveSneakCap',
    'fSDRsSkillNoLOSlightSpellMult', 'fSDRsSkillNoLOStorchMult',
    'fSDRsSleepSightMult', 'fSDRsSleepSoundMult',
    'fSDRsSoundMovementPenaltyMult', 'fSDRsSoundMult2Handed',
    'fSDRsSoundMultBlade', 'fSDRsSoundMultBlunt', 'fSDRsSoundMultBow',
    'fSDRsSoundMultCloth', 'fSDRsSoundMultEquip', 'fSDRsSoundMultHeavy',
    'fSDRsSoundMultLight', 'fSDRsSoundMultStaff', 'fSDRsSoundMultUnequip',
    'fSDRsSoundSkillEffectivenessCloth', 'fSDRsSoundSkillEffectivenessHeavy',
    'fSDRsSoundSkillEffectivenessLight', 'fSDRsSoundSneakEffectivenessCloth',
    'fSDRsSoundSneakEffectivenessHeavy', 'fSDRsSoundSneakEffectivenessLight',
    'fSDRsSoundSwimmingMult', 'fSDRsSoundTurningMult',
    'fSDRsSoundUnderWaterMult', 'fSDRsSoundWeapRunMult',
    'fSDRsSoundWeapSwimMult', 'fSearchPackageDistanceToTarget',
    'fSearchPackageTimer', 'fSecondsBetweenWindowUpdate', 'fSecundaZOffset',
    'fSeenDataUpdateRadius', 'fShaderShadowUpdateDistance',
    'fShockBoltGrowWidth', 'fShockBoltsLength', 'fShockBoltSmallWidth',
    'fShockBoltsRadius', 'fShockBoltsRadiusStrength',
    'fShockBranchBoltsRadius', 'fShockBranchBoltsRadiusStrength',
    'fShockBranchLifetime', 'fShockBranchSegmentLength',
    'fShockBranchSegmentVariance', 'fShockCastVOffset', 'fShockCoreColorB',
    'fShockCoreColorG', 'fShockCoreColorR', 'fShockGlowColorB',
    'fShockGlowColorG', 'fShockGlowColorR', 'fShockSegmentLength',
    'fShockSegmentVariance', 'fShockSubSegmentVariance',
    'fSittingMaxLookingDown', 'fSkillUseMajorMult', 'fSkillUseMinorMult',
    'fSkillUseSpecMult', 'fSneakExteriorDistanceMult', 'fSneakLostMin',
    'fSneakNoticedMin', 'fSneakSeenMin', 'fSneakSoundsMult',
    'fSneakSwimmingLightMult', 'fSneakUnseenMin',
    'fSortActorDistanceListTimer', 'fSpeechCraftBase', 'fSpeechCraftMult',
    'fSpellCastingDetectionHitActorMod', 'fSplashScale1', 'fSplashScale2',
    'fSplashScale3', 'fSplashSoundHeavy', 'fSplashSoundLight',
    'fSplashSoundMedium', 'fSplashSoundOutMult', 'fSplashSoundTimer',
    'fSplashSoundVelocityMult', 'fStatsHealthLevelMult',
    'fSubmergedAngularDamping', 'fSubmergedLinearDampingH',
    'fSubmergedLinearDampingV', 'fSubmergedLODDistance', 'fSubmergedMaxSpeed',
    'fSubmergedMaxWaterDistance', 'fSubSegmentVariance', 'fSunXExtreme',
    'fSunYExtreme', 'fSunZExtreme', 'fTargetSearchRadius',
    'fTorchEvaluationTimer', 'fTorchLightLevelInterior', 'fTrackDeadZoneXY',
    'fTrackDeadZoneZ', 'fTrackEyeXY', 'fTrackEyeZ', 'fTrackFudgeXY',
    'fTrackFudgeZ', 'fTrackJustAquiredDuration', 'fTrackMaxZ', 'fTrackMinZ',
    'fTrackSpeed', 'fTrackXY', 'fTreeSizeConversion',
    'fTreeTrunkToFoliageMultiplier', 'fUnderwaterFullDepth', 'fUpdateInterval',
    'fValueofItemForNoOwnership', 'fVanityModeAutoXSpeed',
    'fVanityModeAutoYDegrees', 'fVanityModeAutoYSpeed', 'fVanityModeDelay',
    'fVanityModeForceDefault', 'fVanityModeWheelDeadMin',
    'fVanityModeWheelDefault', 'fVanityModeWheelMax', 'fVanityModeWheelMin',
    'fVanityModeWheelMult', 'fVanityModeXMult', 'fVanityModeYMult',
    'fWeaponClutterKnockBipedScale', 'fWeaponClutterKnockMaxWeaponMass',
    'fWeaponClutterKnockMinClutterMass', 'fWeaponClutterKnockMult',
    'fWeatherCloudSpeedMax', 'fWeatherFlashDirectional', 'fWeatherTransAccel',
    'fWeatherTransMin', 'fWortalchmult', 'fWortcraftFatigueMag',
    'fWortcraftStrChanceDenom', 'fWortcraftStrCostDenom', 'fWortStrMult',
    'iAbsorbNumBolts', 'iActivatePickLength', 'iActorKeepTurnDegree',
    'iActorLuckSkillBase', 'iActorTurnDegree', 'iAICombatMaxAllySummonCount',
    'iAICombatMinDetection', 'iAICombatRestoreFatiguePercentage',
    'iAICombatRestoreHealthPercentage', 'iAICombatRestoreMagickaPercentage',
    'iAIDefaultAcrobaticDodgeChance', 'iAIDefaultDodgeChance',
    'iAIDefaultDodgeLeftRightChance', 'iAIDefaultDoNotAcquire',
    'iAIDefaultFleeDisabled', 'iAIDefaultIgnoreAlliesInArea',
    'iAIDefaultMeleeAlertAllowed', 'iAIDefaultPowerAttackBackwardChance',
    'iAIDefaultPowerAttackChance', 'iAIDefaultPowerAttackForwardChance',
    'iAIDefaultPowerAttackLeftChance', 'iAIDefaultPowerAttackNormalChance',
    'iAIDefaultPowerAttackRightChance', 'iAIDefaultPrefersRangedAttacks',
    'iAIDefaultRejectYield', 'iAIDefaultRushingAttackPercentChance',
    'iAIDefaultYieldEnabled', 'iAIDistanceRadiusMinLocation',
    'iAIFleeMaxHitCount', 'iAIFriendlyHitMinDisposition',
    'iAimingNumIterations', 'iAINPCRacePowerChance',
    'iAINumberActorsComplexScene', 'iAIYieldMaxHitCount', 'iAlertAgressionMin',
    'iAllowAlchemyDuringCombat', 'iAllowRechargeDuringCombat',
    'iAllowRepairDuringCombat', 'iAllyHitAllowed', 'iArmorBaseSkill',
    'iArmorDamageBootsChance', 'iArmorDamageCuirassChance',
    'iArmorDamageGauntletsChance', 'iArmorDamageGreavesChance',
    'iArmorDamageHelmChance', 'iArmorDamageShieldChance', 'iArmorWeightBoots',
    'iArmorWeightCuirass', 'iArmorWeightGauntlets', 'iArmorWeightGreaves',
    'iArrowInventoryChance', 'iArrowMaxRefCount', 'iBarterDispositionPenalty',
    'iBoneLODDistMult', 'iBribeAmountMax', 'iClassAcrobat', 'iClassAgent',
    'iClassArcher', 'iClassAssassin', 'iClassBarbarian', 'iClassBard',
    'iClassBattlemage', 'iClassCharactergenClass', 'iClassCrusader',
    'iClassHealer', 'iClassKnight', 'iClassMage', 'iClassMonk',
    'iClassNightblade', 'iClassPilgrim', 'iClassPriest', 'iClassRogue',
    'iClassScout', 'iClassSorcerer', 'iClassSpellsword', 'iClassThief',
    'iClassWarrior', 'iClassWitchhunter', 'iCollFreq',
    'iCombatCastDrainMinimumValue', 'iCombatHighPriorityModifier',
    'iCrimeDaysInPrisonMod', 'iCrimeGoldAttack', 'iCrimeGoldMinValue',
    'iCrimeGoldMurder', 'iCrimeGoldPickpocket', 'iCrimeGoldTresspass',
    'iCurrentTargetBonus', 'iDispBountyMax', 'iDispFameMax',
    'iDistancetoAttackedTarget', 'iFriendHitAllowed', 'iHairColor00',
    'iHairColor01', 'iHairColor02', 'iHairColor03', 'iHairColor04',
    'iHairColor05', 'iHairColor06', 'iHairColor07', 'iHairColor08',
    'iHairColor09', 'iHairColor10', 'iHairColor11', 'iHairColor12',
    'iHairColor13', 'iHairColor14', 'iHairColor15', 'iHighDamp',
    'iHighResponsibility', 'iHorseTurnDegreesPerSecond',
    'iHorseTurnDegreesRampUpPerSecond', 'iHoursToRespawnCell',
    'iInventoryAskQuantityAt', 'iInventoryMenuIdleDelay', 'iLevelUp01Mult',
    'iLevelUp02Mult', 'iLevelUp03Mult', 'iLevelUp04Mult', 'iLevelUp05Mult',
    'iLevelUp06Mult', 'iLevelUp07Mult', 'iLevelUp08Mult', 'iLevelUp09Mult',
    'iLevelUp10Mult', 'iLevelUpSkillCount', 'iLockLevelMaxAverage',
    'iLockLevelMaxEasy', 'iLockLevelMaxHard', 'iLockLevelMaxVeryEasy',
    'iLockLevelMaxVeryHard', 'iLowDamp', 'iMagicLightMaxCount',
    'iMagicMaxSummonedCreatureTypes', 'iMagnitudeLevelAffectsAll',
    'iMarksmanFatigueBurnPerSecondSkill', 'iMaxArrowsInQuiver',
    'iMaxPlayerSummonedCreatures', 'iMediumResponsiblityLevel',
    'iMerchantRespawnDay1', 'iMerchantRespawnDay2',
    'iNumberActorsAllowedToFollowPlayer',
    'iNumberActorsGoThroughLoadDoorInCombat', 'iNumberGuardsCrimeResponse',
    'iPerkAttackDisarmChance', 'iPerkBlockDisarmChance',
    'iPerkHandToHandBlockRecoilChance', 'iPerkHeavyArmorJumpSum',
    'iPerkHeavyArmorSinkSum', 'iPerkLightArmorMasterMinSum',
    'iPerkMarksmanKnockdownChance', 'iPerkMarksmanParalyzeChance',
    'iPersuasionAngleMax', 'iPersuasionAngleMin', 'iPersuasionBribeCrime',
    'iPersuasionBribeGold', 'iPersuasionBribeRefuse', 'iPersuasionBribeScale',
    'iPersuasionDemandDisposition', 'iPersuasionDemandGold',
    'iPersuasionDemandRefuse', 'iPersuasionDemandScale', 'iPersuasionInner',
    'iPersuasionMaxDisp', 'iPersuasionMiddle', 'iPersuasionOuter',
    'iPersuasionPower1', 'iPersuasionPower2', 'iPersuasionPower3',
    'iPlayerCustomClass', 'iQuickKeyIgnoreMillis', 'iRegionGenClusterAttempts',
    'iRegionGenClusterPasses', 'iRegionGenRandomnessType',
    'iRemoveExcessDeadComplexCount', 'iRemoveExcessDeadComplexTotalActorCount',
    'iRemoveExcessDeadCount', 'iRemoveExcessDeadTotalActorCount',
    'iSDRsApplyDetectLifeEffects', 'iSDRsChamCap', 'iSDRsChamLightEffect',
    'iSDRsChamSightEffPerc', 'iSDRsChamSkillEffPerc', 'iSDRsChamSoundEffPerc',
    'iSDRsChamTorchEffect', 'iSDRsCollisionBonus', 'iSDRsDbgDLNPC2NPC',
    'iSDRsDbgDLNPC2Player', 'iSDRsDbgDLPlayer2NPC', 'iSDRsDbgNoLOS',
    'iSDRsDbgPlayerMovingLight', 'iSDRsDbgWeaponEquipSound',
    'iSDRsDbgWeapPenaltyDetails', 'iSDRsDetectionPackage',
    'iSDRsDetLifeFlatBump', 'iSDRsDetLifeIntBumpType',
    'iSDRsDetLifeLOSBumpAmount', 'iSDRsDetLifeLOSBumpType',
    'iSDRsDetMaxAdjFatigue', 'iSDRsDetMaxAdjHealth', 'iSDRsDialoguePenalty',
    'iSDRsHeadlessCantHear', 'iSDRsHeadlessCantSee', 'iSDRsInvisSightEffPerc',
    'iSDRsInvisSkillEffPerc', 'iSDRsInvisSoundEffPerc',
    'iSDRsLightingBumpLightSpell', 'iSDRsLightingBumpTorch',
    'iSDRsLightingExpPercent', 'iSDRsPerkSneakJourneyman',
    'iSDRsShortRangeMaxBump', 'iSDRsShortRangeMaxDistance',
    'iSDRsShortRangeMinDistance', 'iSDRsSilencePerk',
    'iSDRsSoundBaseMovementPenalty', 'iSDRsSoundBumpLanding',
    'iSDRsSoundBumpSplash', 'iSDRsTalkDialogueRadius', 'iSDRsTalkPenalty',
    'iSDRsTrackingBonus', 'iSDRsVisionThresholdDay',
    'iSDRsVisionThresholdNight', 'iSDRsVisionThresholdTwilight',
    'iSecundaSize', 'iShockBranchNumBolts', 'iShockBranchSegmentsPerBolt',
    'iShockDebug', 'iShockNumBolts', 'iShockSegmentsPerBolt',
    'iShockSubSegments', 'iSkillApprenticeMin', 'iSkillExpertMin',
    'iSkillJourneymanMin', 'iSkillMasterMin', 'iSneakSkillUseDistance',
    'iSpeakSoundLipDistance', 'iTrainingSkills', 'iUpdateGroups',
    'iVampirismAgeOffset', 'iWortcraftMaxEffectsApprentice',
    'iWortcraftMaxEffectsExpert', 'iWortcraftMaxEffectsJourneyman',
    'iWortcraftMaxEffectsMaster', 'iWortcraftMaxEffectsNovice',
    'sBloodTextureDefault', 'sBloodTextureExtra1', 'sBloodTextureExtra2',
    'sBloodParticleDefault', 'sBloodParticleExtra1', 'sBloodParticleExtra2',
    'sAutoSaving', 'sFloraFailureMessage', 'sFloraSuccessMessage',
    'sQuickSaving', 'sFastTravelHorseatGate', 'sLoadingArea', 'sQuickLoading',
    'sNoCharge',
]


GlobalsTweaks = [
    (_(u'World: Timescale'),_(u'Timescale will be set to:'),
        u'timescale',
        (u'1',         1),
        (u'8',         8),
        (u'10',       10),
        (u'12',       12),
        (u'18',       18),
        (u'24',       24),
        (u'[30]',     30),
        (u'40',       40),
        (_(u'Custom'), 0),
        ),
    (_(u'Thieves Guild: Quest Stealing Penalty'),
     _(u'The penalty (in Septims) for stealing while doing a Thieves Guild job:'),
        u'tgpricesteal',
        (u'100',     100),
        (u'150',     150),
        (u'[200]',   200),
        (u'300',     300),
        (u'400',     400),
        (_(u'Custom'), 0),
        ),
    (_(u'Thieves Guild: Quest Killing Penalty'),
     _(u'The penalty (in Septims) for killing while doing a Thieves Guild job:'),
        u'tgpriceperkill',
        (u'250',     250),
        (u'500',     500),
        (u'[1000]', 1000),
        (u'1500',   1500),
        (u'2000',   2000),
        (_(u'Custom'), 0),
        ),
    (_(u'Thieves Guild: Quest Attacking Penalty'),
     _(u'The penalty (in Septims) for attacking while doing a Thieves Guild job:'),
        u'tgpriceattack',
        (u'100',     100),
        (u'250',     250),
        (u'[500]',   500),
        (u'750',     750),
        (u'1000',   1000),
        (_(u'Custom'), 0),
        ),
    (_(u'Crime: Force Jail'),
     _(u'The amount of Bounty at which a jail sentence is mandatory'),
        u'crimeforcejail',
        (u'1000',   1000),
        (u'2500',   2500),
        (u'[5000]', 5000),
        (u'7500',   7500),
        (u'10000', 10000),
        (_(u'Custom'), 0),
        ),
    ]

GmstTweaks = [
    (_(u'Arrow: Litter Count'),
     _(u'Maximum number of spent arrows allowed in cell.'),
        (u'iArrowMaxRefCount',),
        (u'[15]',      15),
        (u'25',        25),
        (u'35',        35),
        (u'50',        50),
        (u'100',      100),
        (u'500',      500),
        (_(u'Custom'), 15),
        ),
    (_(u'Arrow: Litter Time'),
     _(u'Time before spent arrows fade away from cells and actors.'),
        (u'fArrowAgeMax',),
        (_(u'1 Minute'),            60.0),
        (_(u'[1.5 Minutes]'),       90.0),
        (_(u'2 Minutes'),          120.0),
        (_(u'3 Minutes'),          180.0),
        (_(u'5 Minutes'),          300.0),
        (_(u'10 Minutes'),         600.0),
        (_(u'30 Minutes'),        1800.0),
        (_(u'1 Hour'),            3600.0),
        (_(u'Custom (in seconds)'), 90.0),
        ),
    (_(u'Arrow: Recovery from Actor'),
     _(u'Chance that an arrow shot into an actor can be recovered.'),
        (u'iArrowInventoryChance',),
        (u'[50%]',     50),
        (u'60%',       60),
        (u'70%',       70),
        (u'80%',       80),
        (u'90%',       90),
        (u'100%',     100),
        (_(u'Custom'), 50),
        ),
    (_(u'Arrow: Speed'),_(u'Speed of a full power arrow.'),
        (u'fArrowSpeedMult',),
        (u'[x 1.0]',                  1500.0),
        (u'x 1.2',                1500.0*1.2),
        (u'x 1.4',                1500.0*1.4),
        (u'x 1.6',                1500.0*1.6),
        (u'x 1.8',                1500.0*1.8),
        (u'x 2.0',                1500.0*2.0),
        (u'x 2.2',                1500.0*2.2),
        (u'x 2.4',                1500.0*2.4),
        (u'x 2.6',                1500.0*2.6),
        (u'x 2.8',                1500.0*2.8),
        (u'x 3.0',                1500.0*3.0),
        (_(u'Custom (base is 1500)'), 1500.0),
        ),
    (_(u'Camera: Chase Tightness'),
     _(u'Tightness of chase camera to player turning.'),
        (u'fChase3rdPersonVanityXYMult',u'fChase3rdPersonXYMult'),
        (u'x 1.5',                            6.0,  6.0),
        (u'x 2.0',                            8.0,  8.0),
        (u'x 3.0',                           12.0, 12.0),
        (u'x 5.0',                           20.0, 20.0),
        (_(u'ChaseCameraMod.esp (x 24.75)'), 99.0, 99.0),
        (_(u'Custom'),                        4.0,  4.0),
        ),
    (_(u'Camera: Chase Distance'),
     _(u'Distance camera can be moved away from PC using mouse wheel.'),
        (u'fVanityModeWheelMax', u'fChase3rdPersonZUnitsPerSecond',u'fVanityModeWheelMult'),
        (u'x 1.5', 600.0*1.5, 300.0*1.5, 0.15),
        (u'x 2',   600.0*2.0, 300.0*2.0,  0.2),
        (u'x 3',   600.0*3.0, 300.0*3.0,  0.3),
        (u'x 5',   600.0*5.0,    1000.0,  0.3),
        (u'x 10',   600.0*10,    2000.0,  0.3),
        (_(u'Custom'), 600.0,     300.0, 0.15),
        ),
    (_(u'Magic: Chameleon Refraction'),
     _(u'Chameleon with transparency instead of refraction effect.'),
        (u'fChameleonMinRefraction',u'fChameleonMaxRefraction'),
        (_(u'Zero'),      0.0, 0.0),
        (_(u'[Normal]'), 0.01, 1.0),
        (_(u'Full'),      1.0, 1.0),
        (_(u'Custom'),   0.01, 1.0),
        ),
    (_(u'Compass: Disable'),
     _(u'No quest and/or points of interest markers on compass.'),
        (u'iMapMarkerRevealDistance',),
        (_(u'Quests'),          1803),
        (_(u'POIs'),            1802),
        (_(u'Quests and POIs'), 1801),
        ),
    (_(u'Compass: Recognition Distance'),_(u'Distance at which markers (dungeons, towns etc.) begin to show on the compass.'),
     (u'iMapMarkerVisibleDistance',),
        (_(u'75% Shorter'),  3125),
        (_(u'50% Shorter'),  6250),
        (_(u'25% Shorter'),  9375),
        (_(u'[Default]'),    12500),
        (_(u'25% Further'),  15625),
        (_(u'50% Further'),  18750),
        (_(u'75% Further'),  21875),
        (_(u'Custom'),       12500),
        ),
    (_(u'Actor: Unconsciousness Duration'),
     _(u'Time which essential NPCs stay unconscious.'),
        (u'fEssentialDeathTime',),
        (_(u'[10 Seconds]'),        10.0),
        (_(u'20 Seconds'),          20.0),
        (_(u'30 Seconds'),          30.0),
        (_(u'1 Minute'),            60.0),
        (_(u'1 1/2 Minutes'),   1.5*60.0),
        (_(u'2 Minutes'),         2*60.0),
        (_(u'3 Minutes'),         3*60.0),
        (_(u'5 Minutes'),         5*60.0),
        (_(u'Custom (in seconds)'), 10.0),
        ),
    (_(u'Movement: Fatigue from Running/Encumbrance'),
     _(u'Fatigue cost of running and encumbrance.'),
        (u'fFatigueRunBase',u'fFatigueRunMult'),
        (u'x 1.5',    12.0,  6.0),
        (u'x 2',      16.0,  8.0),
        (u'x 3',      24.0, 12.0),
        (u'x 4',      32.0, 16.0),
        (u'x 5',      40.0, 20.0),
        (_(u'Custom'), 8.0,  4.0),
        ),
    (_(u'Player: Horse Turning Speed'),
     _(u'Speed at which your horse can turn.'),
        (u'iHorseTurnDegreesPerSecond', u'iHorseTurnDegreesRampUpPerSecond',),
        (_(u'[Default]'), 45, 80),
        (u'x1.5',         68, 120),
        (u'x2',           90, 160),
        (u'x3',           135, 240),
        (_(u'Custom (Turning and ramp-up speeds)'), 45, 80),
        ),
    (_(u'Camera: PC Death Time'),
     _(u"Time after player's death before reload menu appears."),
        (u'fPlayerDeathReloadTime',),
        (_(u'15 Seconds'),     15.0),
        (_(u'30 Seconds'),     30.0),
        (_(u'1 Minute'),       60.0),
        (_(u'5 Minute'),      300.0),
        (_(u'Unlimited'), 9999999.0),
        (_(u'Custom'),         15.0),
        ),
    (_(u'World: Cell Respawn Time'),
     _(u'Time before unvisited cell respawns. But longer times increase save sizes.'),
        (u'iHoursToRespawnCell',),
        (_(u'1 Day'),           24*1),
        (_(u'[3 Days]'),        24*3),
        (_(u'5 Days'),          24*5),
        (_(u'10 Days'),        24*10),
        (_(u'20 Days'),        24*20),
        (_(u'1 Month'),        24*30),
        (_(u'6 Months'),      24*182),
        (_(u'1 Year'),        24*365),
        (_(u'Custom (in hours)'), 72),
        ),
    (_(u'Combat: Recharge Weapons'),
     _(u'Allow recharging weapons during combat.'),
        (u'iAllowRechargeDuringCombat',),
        (_(u'[Allow]'),  1),
        (_(u'Disallow'), 0),
        ),
    (_(u'Magic: Bolt Speed'),_(u'Speed of magic bolt/projectile.'),
        (u'fMagicProjectileBaseSpeed',),
        (u'x 1.2',             1000.0*1.2),
        (u'x 1.4',             1000.0*1.4),
        (u'x 1.6',             1000.0*1.6),
        (u'x 1.8',             1000.0*1.8),
        (u'x 2.0',             1000.0*2.0),
        (u'x 2.2',             1000.0*2.2),
        (u'x 2.4',             1000.0*2.4),
        (u'x 2.6',             1000.0*2.6),
        (u'x 2.8',             1000.0*2.8),
        (u'x 3.0',             1000.0*3.0),
        (_(u'Custom (base 1000)'), 1000.0),
        ),
    (_(u'Msg: Equip Misc. Item'),_(u'Message upon equipping misc. item.'),
        (u'sCantEquipGeneric',),
        (_(u'[None]'), u' '),
        (u'.',         u'.'),
        (_(u'Hmm...'), _(u'Hmm...')),
        (_(u'Custom'), _(u' ')),
        ),
    (_(u'Msg: Auto Saving'),_(u'Message upon auto saving.'),
        (u'sAutoSaving',),
        (_(u'[None]'), u' '),
        (u'.',         u'.'),
        (_(u'Hmm...'), _(u'Hmm...')),
        (_(u'Custom'), _(u' ')),
        ),
    (_(u'Msg: Harvest Failure'),
     _(u'Message upon failure at harvesting flora.'),
        (u'sFloraFailureMessage',),
        (_(u'[None]'), u' '),
        (u'.',         u'.'),
        (_(u'Hmm...'), _(u'Hmm...')),
        (_(u'Custom'), _(u' ')),
        ),
    (_(u'Msg: Harvest Success'),
     _(u'Message upon success at harvesting flora.'),
        (u'sFloraSuccessMessage',),
        (_(u'[None]'), u' '),
        (u'.',         u'.'),
        (_(u'Hmm...'), _(u'Hmm...')),
        (_(u'Custom'), _(u' ')),
        ),
    (_(u'Msg: Quick Save'),_(u'Message upon quick saving.'),
        (u'sQuickSaving',),
        (_(u'[None]'), u' '),
        (u'.',         u'.'),
        (_(u'Hmm...'), _(u'Hmm...')),
        (_(u'Custom'), _(u' ')),
        ),
    (_(u'Msg: Horse Stabled'),
     _(u'Message upon fast traveling with a horse to a city.'),
        (u'sFastTravelHorseatGate',),
        (_(u'[None]'), u' '),
        (u'.',         u'.'),
        (_(u'Hmm...'), _(u'Hmm...')),
        (_(u'Custom'), _(u' ')),
        ),
    (_(u'Msg: No Fast Travel'),
     _(u'Message when attempting to fast travel when fast travel is unavailable due to location.'),
        (u'sNoFastTravelScriptBlock',),
        (_(u'[None]'), u' '),
        (u'.',         u'.'),
        (_(u'Hmm...'), _(u'Hmm...')),
        (_(u'Custom'), _(u' ')),
        ),
    (_(u'Msg: Loading Area'),_(u'Message when background loading area.'),
        (u'sLoadingArea',),
        (_(u'[None]'), u' '),
        (u'.',         u'.'),
        (_(u'Hmm...'), _(u'Hmm...')),
        (_(u'Custom'), _(u' ')),
        ),
    (_(u'Msg: Quick Load'),_(u'Message when quick loading.'),
        (u'sQuickLoading',),
        (_(u'[None]'), u' '),
        (u'.',         u'.'),
        (_(u'Hmm...'), _(u'Hmm...')),
        (_(u'Custom'), _(u' ')),
        ),
    (_(u'Msg: Not Enough Charge'),
     _(u'Message when enchanted item is out of charge.'),
        (u'sNoCharge',),
        (_(u'[None]'), u' '),
        (u'.',         u'.'),
        (_(u'Hmm...'), _(u'Hmm...')),
        (_(u'Custom'), _(u' ')),
        ),
    (_(u'Cost Multiplier: Repair'),
     _(u'Cost factor for repairing items.'),
        (u'fRepairCostMult',),
        (u'0.1',       0.1),
        (u'0.2',       0.2),
        (u'0.3',       0.3),
        (u'0.4',       0.4),
        (u'0.5',       0.5),
        (u'0.6',       0.6),
        (u'0.7',       0.7),
        (u'0.8',       0.8),
        (u'[0.9]',     0.9),
        (u'1.0',       1.0),
        (_(u'Custom'), 0.9),
        ),
    (_(u'Actor: Greeting Distance'),
     _(u'Distance (in units) at which NPCs will greet the player.'),
        (u'fAIMinGreetingDistance',),
        (u'50',        50.0),
        (u'100',       100.0),
        (u'125',       125.0),
        (u'[150]',     150.0),
        (u'200',       200.0),
        (u'300',       300.0),
        (_(u'Custom'), 150.0),
        ),
    (_(u'Cost Multiplier: Recharge'),_(u'Cost factor for recharging items.'),
        (u'fRechargeGoldMult',),
        (u'0.1',       0.1),
        (u'0.2',       0.2),
        (u'0.3',       0.3),
        (u'0.5',       0.5),
        (u'0.7',       0.7),
        (u'1.0',       1.0),
        (u'1.5',       1.5),
        (u'[2.0]',     2.0),
        (_(u'Custom'), 2.0),
        ),
    (_(u'Master of Mercantile extra gold amount'),
     _(u'How much more barter gold all merchants have for a master of mercantile.'),
        (u'iPerkExtraBarterGoldMaster',),
        (u'300',       300),
        (u'400',       400),
        (u'[500]',     500),
        (u'600',       600),
        (u'800',       800),
        (u'1000',     1000),
        (_(u'Custom'), 500),
        ),
    (_(u'Combat: Max Actors'),
     _(u'Maximum number of actors that can actively be in combat with the player.'),
        (u'iNumberActorsInCombatPlayer',),
        (u'[10]',      10),
        (u'15',        15),
        (u'20',        20),
        (u'30',        30),
        (u'40',        40),
        (u'50',        50),
        (u'80',        80),
        (_(u'Custom'), 10),
        ),
    (_(u'Crime: Alarm Distance'),
     _(u'Distance from player that NPCs (guards) will be alerted of a crime.'),
        (u'iCrimeAlarmRecDistance',),
        (u'6000',      6000),
        (u'[4000]',    4000),
        (u'3000',      3000),
        (u'2000',      2000),
        (u'1000',      1000),
        (u'500',        500),
        (_(u'Custom'), 4000),
        ),
    (_(u'Crime: Prison Duration Modifier'),
     _(u'Days in prison is your bounty divided by this number.'),
        (u'iCrimeDaysInPrisonMod',),
        (u'50',         50),
        (u'60',         60),
        (u'70',         70),
        (u'80',         80),
        (u'90',         90),
        (u'[100]',     100),
        (_(u'Custom'), 100),
        ),
    (_(u'Cost Multiplier: Enchantment'),
     _(u'Cost factor for enchanting items, OOO default is 120, vanilla 10.'),
        (u'fEnchantmentGoldMult',),
        (u'[10]',      10.0),
        (u'20',        20.0),
        (u'30',        30.0),
        (u'50',        50.0),
        (u'70',        70.0),
        (u'90',        90.0),
        (u'120',      120.0),
        (u'150',      150.0),
        (_(u'Custom'), 10.0),
        ),
    (_(u'Cost Multiplier: Spell Making'),_(u'Cost factor for making spells.'),
        (u'fSpellmakingGoldMult',),
        (u'[3]',       3.0),
        (u'5',         5.0),
        (u'8',         8.0),
        (u'10',       10.0),
        (u'15',       15.0),
        (_(u'Custom'), 3.0),
        ),
    (_(u'AI: Max Active Actors'),
     _(u'Maximum actors whose AI can be active. Must be higher than Combat: Max Actors'),
        (u'iAINumberActorsComplexScene',),
        (u'20',                 20),
        (u'[25]',               25),
        (u'30',                 30),
        (u'35',                 35),
        (_(u'MMM Default: 40'), 40),
        (u'50',                 50),
        (u'60',                 60),
        (u'100',               100),
        (_(u'Custom'),          25),
        ),
    (_(u'Magic: Max Player Summons'),
     _(u'Maximum number of creatures the player can summon.'),
        (u'iMaxPlayerSummonedCreatures',),
        (u'[1]',       1),
        (u'3',         3),
        (u'5',         5),
        (u'8',         8),
        (u'10',       10),
        (_(u'Custom'), 1),
        ),
    (_(u'Combat: Max Ally Hits'),
     _(u'Maximum number of hits on an ally allowed in combat before the ally will attack the hitting character.'),
        (u'iAllyHitAllowed',),
        (u'0',         0),
        (u'3',         3),
        (u'[5]',       5),
        (u'8',         8),
        (u'10',       10),
        (u'15',       15),
        (_(u'Custom'), 5),
        ),
    (_(u'Magic: Max NPC Summons'),
     _(u'Maximum number of creatures that each NPC can summon'),
        (u'iAICombatMaxAllySummonCount',),
        (u'1',         1),
        (u'[3]',       3),
        (u'5',         5),
        (u'8',         8),
        (u'10',       10),
        (u'15',       15),
        (_(u'Custom'), 3),
        ),
    (_(u'Bounty: Assault'),
     _(u"Bounty for attacking a 'good' npc."),
        (u'iCrimeGoldAttackMin',),
        (u'40',        40),
        (u'100',       100),
        (u'200',       200),
        (u'300',       300),
        (u'400',       400),
        (u'[500]',     500),
        (u'650',       650),
        (u'800',       800),
        (_(u'Custom'), 500),
        ),
    (_(u'Bounty: Horse Theft'),_(u'Bounty for horse theft'),
        (u'iCrimeGoldStealHorse',),
        (u'10',        10),
        (u'25',        25),
        (u'50',        50),
        (u'100',       100),
        (u'200',       200),
        (u'[250]',     250),
        (u'300',       300),
        (u'450',       450),
        (_(u'Custom'), 100),
        (_(u'Custom'), 250),
        ),
    (_(u'Bounty: Theft'),_(u'Bounty for stealing, as fraction of item value.'),
        (u'fCrimeGoldSteal',),
        (u'1/4',      0.25),
        (u'[1/2]',     0.5),
        (u'3/4',      0.75),
        (u'1',         1.0),
        (_(u'Custom'), 0.5),
        ),
    (_(u'Combat: Alchemy'),_(u'Allow alchemy during combat.'),
        (u'iAllowAlchemyDuringCombat',),
        (_(u'Allow'),      1),
        (_(u'[Disallow]'), 0),
        ),
    (_(u'Combat: Repair'),_(u'Allow repairing armor/weapons during combat.'),
        (u'iAllowRepairDuringCombat',),
        (_(u'Allow'),      1),
        (_(u'[Disallow]'), 0),
        ),
    (_(u'Actor: Max Companions'),
     _(u'Maximum number of actors following the player.'),
        (u'iNumberActorsAllowedToFollowPlayer',),
        (u'2',         2),
        (u'4',         4),
        (u'[6]',       6),
        (u'8',         8),
        (u'10',       10),
        (_(u'Custom'), 6),
        ),
    (_(u'Actor: Training Limit'),
     _(u'Maximum number of Training allowed by trainers.'),
        (u'iTrainingSkills',),
        (u'1',               1),
        (u'[5]',             5),
        (u'8',               8),
        (u'10',             10),
        (u'20',             20),
        (_(u'Unlimited'), 9999),
        (_(u'Custom'),       0),
        ),
    (_(u'Combat: Maximum Armor Rating'),
     _(u'The Maximum amount of protection you will get from armor.'),
        (u'fMaxArmorRating',),
        (u'50',        50.0),
        (u'75',        75.0),
        (u'[85]',      85.0),
        (u'90',        90.0),
        (u'95',        95.0),
        (u'100',       100.0),
        (_(u'Custom'), 85.0),
        ),
    (_(u'Warning: Interior Distance to Hostiles'),
     _(u'The minimum distance hostile actors have to be to be allowed to sleep, travel etc, when inside interiors.'),
        (u'fHostileActorInteriorDistance',),
        (u'10',          10.0),
        (u'100',        100.0),
        (u'500',        500.0),
        (u'1000',      1000.0),
        (u'[2000]',    2000.0),
        (u'3000',      3000.0),
        (u'4000',      4000.0),
        (_(u'Custom'), 2000.0),
        ),
    (_(u'Warning: Exterior Distance to Hostiles'),
     _(u'The minimum distance hostile actors have to be to be allowed to sleep, travel etc, when outside.'),
        (u'fHostileActorExteriorDistance',),
        (u'10',          10.0),
        (u'100',        100.0),
        (u'500',        500.0),
        (u'1000',      1000.0),
        (u'2000',      2000.0),
        (u'[3000]',    3000.0),
        (u'4000',      4000.0),
        (u'5000',      5000.0),
        (u'6000',      6000.0),
        (_(u'Custom'), 3000.0),
        ),
    [(_(u'UOP Vampire Aging and Face Fix.esp'),
      _(u"Duplicate of UOP component that disables vampire aging (fixes a bug). Use instead of 'UOP Vampire Aging & Face Fix.esp' to save an esp slot."),
        (u'iVampirismAgeOffset',),
        (u'Fix it!', 0),
        ),
     {'defaultEnabled':True}],
    (_(u'AI: Max Dead Actors'),
     _(u"Maximum number of dead actors allowed before they're removed."),
        (u'iRemoveExcessDeadCount', u'iRemoveExcessDeadTotalActorCount',u'iRemoveExcessDeadComplexTotalActorCount',
         u'iRemoveExcessDeadComplexCount', u'fRemoveExcessDeadTime',u'fRemoveExcessComplexDeadTime'),
        (u'[x 1]',   int(15*1),   int(20*1),   int(20*1), int(3*1),  10.0*1.0,  2.5*1.0),
        (u'x 1.5', int(15*1.5), int(20*1.5), int(20*1.5), int(3*2),  10.0*3.0,  2.5*3.0),
        (u'x 2',     int(15*2),   int(20*2),   int(20*2), int(3*3),  10.0*5.0,  2.5*5.0),
        (u'x 2.5', int(15*2.5), int(20*2.5), int(20*2.5), int(3*4),  10.0*7.0,  2.5*7.0),
        (u'x 3',     int(15*3),   int(20*3),   int(20*3), int(3*5),  10.0*9.0,  2.5*9.0),
        (u'x 3.5', int(15*3.5), int(20*3.5), int(20*3.5), int(3*6), 10.0*11.0, 2.5*11.0),
        (u'x 4',     int(15*4),   int(20*4),   int(20*4), int(3*7), 10.0*13.0, 2.5*13.0),
        (_(u'Custom'),      15,          20,          20,        3,      10.0,      2.5),
        ),
    (_(u'Player: Inventory Quantity Prompt'),
     _(u'Number of items in a stack at which point Oblivion prompts for a '
       u'quantity.'),
        (u'iInventoryAskQuantityAt',),
        (_(u'Always Prompt'), 1),
        (u'2',                2),
        (u'[3]',              3),
        (u'4',                4),
        (u'5',                5),
        (u'10',               10),
        (u'20',               20),
        (_(u'Never Prompt'),  99999),
        (_(u'Custom'),        5),
        ),
    (_(u'Bounty: Trespassing'),_(u'Bounty for trespassing.'),
        (u'iCrimeGoldTresspass',), # (sic)
        (u'1',         1),
        (u'[5]',       5),
        (u'8',         8),
        (u'10',       10),
        (u'20',       20),
        (_(u'Custom'), 5),
        ),
    (_(u'Bounty: Pickpocketing'),_(u'Bounty for pickpocketing.'),
        (u'iCrimeGoldPickpocket',),
        (u'5',          5),
        (u'8',          8),
        (u'10',        10),
        (u'[25]',      25),
        (u'50',        50),
        (u'100',      100),
        (_(u'Custom'), 25),
        ),
    (_(u'Leveled Creature Max Level Difference'),
     _(u'Maximum difference to player level for leveled creatures.'),
        (u'iLevCreaLevelDifferenceMax',),
        (u'1',               1),
        (u'5',               5),
        (u'[8]',             8),
        (u'10',             10),
        (u'20',             20),
        (_(u'Unlimited'), 9999),
        (_(u'Custom'),       8),
        ),
    (_(u'Leveled Item Max Level Difference'),
     _(u'Maximum difference to player level for leveled items.'),
        (u'iLevItemLevelDifferenceMax',),
        (u'1',               1),
        (u'5',               5),
        (u'[8]',             8),
        (u'10',             10),
        (u'20',             20),
        (_(u'Unlimited'), 9999),
        (_(u'Custom'),       8),
        ),
    (_(u'Actor: Strength Encumbrance Multiplier'),
     _(u"Actor's Strength X this = Actor's Encumbrance capacity."),
        (u'fActorStrengthEncumbranceMult',),
        (u'1',                 1.0),
        (u'3',                 3.0),
        (u'[5]',               5.0),
        (u'8',                 8.0),
        (u'10',               10.0),
        (u'20',               20.0),
        (_(u'Unlimited'), 999999.0),
        (_(u'Custom'),         5.0),
        ),
    (_(u'Visuals: NPC Blood'),
     _(u'Changes or disables NPC Blood splatter textures.'),
        (u'sBloodTextureDefault', u'sBloodTextureExtra1',u'sBloodTextureExtra2', u'sBloodParticleDefault', u'sBloodParticleExtra1',u'sBloodParticleExtra2'),
        (_(u'No Blood'), u'', u'', u'', u'', u'', u''),
        (_(u'Custom'),   u'', u'', u'', u'', u'', u''),
        ),
    (_(u'AI: Max Smile Distance'),
     _(u'Maximum distance for NPCs to start smiling.'),
        (u'fAIMaxSmileDistance',),
        (_(u'No Smiles'),         0.0),
        (_(u'[Default (128)]'), 128.0),
        (_(u'Custom'),          128.0),
        ),
    (_(u'Player: Max Draggable Weight'),
     _(u'Maximum weight to be able move things with the drag key.'),
        (u'fMoveWeightMax',),
        (u'115',                          115.0),
        (u'[150]',                        150.0),
        (u'250',                          250.0),
        (u'500',                          500.0),
        (_(u'MovableBodies.esp (1500)'),  1500.0),
        (_(u'Custom'),                    150.0),
        ),
    (_(u'AI: Conversation Chance'),
     _(u'Chance of NPCs engaging each other in conversation (possibly also '
       u'with the player).'),
        (u'fAISocialchanceForConversation',),
        (u'10%',        10.0),
        (u'25%',        25.0),
        (u'50%',        50.0),
        (u'[100%]',    100.0),
        (_(u'Custom'), 100.0),
        ),
    (_(u'AI: Conversation Chance - Interior'),
     _(u'Chance of NPCs engaging each other in conversation (possibly also '
       u'with the player) - in interiors.'),
        (u'fAISocialchanceForConversationInterior',),
        (u'10%',        10.0),
        (u'[25%]',      25.0),
        (u'50%',        50.0),
        (u'100%',      100.0),
        (_(u'Custom'), 100.0),
        ),
    (_(u'Crime: Pickpocketing Chance'),
     _(u'Improve chances of successful pickpocketing.'),
        (u'fPickPocketMinChance', u'fPickPocketMaxChance',),
        (_(u'0% to 50%'),                   0,  50),
        (_(u'0% to 75%'),                   0,  75),
        (_(u'[0% to 90%]'),                 0,  90),
        (_(u'0% to 100%'),                  0,  100),
        (_(u'25% to 100%'),                 25, 100),
        (_(u'50% to 100%'),                 50, 100),
        (_(u'Custom (Min and Max Chance)'), 0,  90),
        ),
    (_(u'Actor: Max Jump Height'),
     _(u'Increases the height to which you can jump. First value is min, '
       u'second is max.'),
        (u'fJumpHeightMin', u'fJumpHeightMax'),
        (u'0.5x',       38.0,  82.0),
        (u'[1x]',       76.0, 164.0),
        (u'2x',        152.0, 328.0),
        (u'3x',        228.0, 492.0),
        (u'4x',        304.0, 656.0),
        (_(u'Custom'),  76.0, 164.0),
        ),
    (_(u'Bounty: Murder'),
     _(u'Bounty for committing a witnessed murder.'),
        (u'iCrimeGoldMurder',),
        (u'500',       500),
        (u'750',       750),
        (u'[1000]',    1000),
        (u'1250',      1250),
        (u'1500',      1500),
        (_(u'Custom'), 1000),
        ),
    (_(u'Bounty: Jailbreak'),
     _(u'Bounty for escaping from jail.'),
        (u'iCrimeGoldJailBreak',),
        (u'[50]',       50),
        (u'100',       100),
        (u'125',       125),
        (u'150',       150),
        (u'175',       175),
        (u'200',       200),
        (_(u'Custom'), 100),
        ),
    ]

#------------------------------------------------------------------------------
# ListsMerger
#------------------------------------------------------------------------------
listTypes = ('LVLC','LVLI','LVSP',)
#------------------------------------------------------------------------------
# NamesPatcher
#------------------------------------------------------------------------------
namesTypes = {'ALCH', 'AMMO', 'APPA', 'ARMO', 'BOOK', 'BSGN', 'CLAS', 'CLOT',
              'CONT', 'CREA', 'DOOR', 'EYES', 'FACT', 'FLOR', 'HAIR', 'INGR',
              'KEYM', 'LIGH', 'MISC', 'NPC_', 'RACE', 'SGST', 'SLGM', 'SPEL',
              'WEAP'}
#------------------------------------------------------------------------------
# ItemPrices Patcher
#------------------------------------------------------------------------------
pricesTypes = {'ALCH':{},'AMMO':{},'APPA':{},'ARMO':{},'BOOK':{},'CLOT':{},'INGR':{},'KEYM':{},'LIGH':{},'MISC':{},'SGST':{},'SLGM':{},'WEAP':{}}
#------------------------------------------------------------------------------
# StatsImporter
#------------------------------------------------------------------------------
statsTypes = {
    'ALCH':('eid', 'weight', 'value'),
    'AMMO':('eid', 'weight', 'value', 'damage', 'speed', 'enchantPoints'),
    'APPA':('eid', 'weight', 'value', 'quality'),
    'ARMO':('eid', 'weight', 'value', 'health', 'strength'),
    'BOOK':('eid', 'weight', 'value', 'enchantPoints'),
    'CLOT':('eid', 'weight', 'value', 'enchantPoints'),
    'INGR':('eid', 'weight', 'value'),
    'KEYM':('eid', 'weight', 'value'),
    'LIGH':('eid', 'weight', 'value', 'duration'),
    'MISC':('eid', 'weight', 'value'),
    'SGST':('eid', 'weight', 'value', 'uses'),
    'SLGM':('eid', 'weight', 'value'),
    'WEAP':('eid', 'weight', 'value', 'health', 'damage', 'speed', 'reach', 'enchantPoints'),
}
statsHeaders = (
    #--Alch
    (u'ALCH',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'))) + u'"\n')),
    #Ammo
    (u'AMMO',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Damage'),_(u'Speed'),_(u'EPoints'))) + u'"\n')),
    #--Apparatus
    (u'APPA',
        (u'"' + u'","'.join((_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Quality'))) + u'"\n')),
    #--Armor
    (u'ARMO',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Health'),_(u'AR'))) + u'"\n')),
    #Books
    (u'BOOK',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'EPoints'))) + u'"\n')),
    #Clothing
    (u'CLOT',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'EPoints'))) + u'"\n')),
    #Ingredients
    (u'INGR',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'))) + u'"\n')),
    #--Keys
    (u'KEYM',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'))) + u'"\n')),
    #Lights
    (u'LIGH',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Duration'))) + u'"\n')),
    #--Misc
    (u'MISC',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'))) + u'"\n')),
    #Sigilstones
    (u'SGST',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Uses'))) + u'"\n')),
    #Soulgems
    (u'SLGM',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'))) + u'"\n')),
    #--Weapons
    (u'WEAP',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Health'),_(u'Damage'),
        _(u'Speed'),_(u'Reach'),_(u'EPoints'))) + u'"\n')),
)

#------------------------------------------------------------------------------
# SoundPatcher
#------------------------------------------------------------------------------
# Needs longs in SoundPatcher
soundsLongsTypes = {'ACTI', 'CONT', 'CREA', 'DOOR', 'LIGH', 'MGEF', 'SOUN',
                    'WATR', 'WTHR'}
soundsTypes = {
    "ACTI": ('sound',),
    "CONT": ('soundOpen','soundClose',),
    "CREA": ('footWeight','inheritsSoundsFrom','sounds',),
    "DOOR": ('soundOpen','soundClose','soundLoop',),
    "LIGH": ('sound',),
    "MGEF": ('castingSound','boltSound','hitSound','areaSound',),
#    "REGN": ('entries.sounds',),
    "SOUN": ('soundFile', 'minDistance', 'maxDistance', 'freqAdjustment', 'staticAtten',
             'stopTime', 'startTime',),
    "WATR": ('sound',),
    "WTHR": ('sounds',),
}

#------------------------------------------------------------------------------
# CellImporter
#------------------------------------------------------------------------------
cellAutoKeys = {u'C.Climate', u'C.Light', u'C.Music', u'C.Name', u'C.Owner',
                u'C.RecordFlags', u'C.Regions', u'C.Water'}#,u'C.Maps'}
cellRecAttrs = {
    u'C.Climate': ('climate',),
    u'C.Light': ('ambientRed','ambientGreen','ambientBlue','unused1',
                'directionalRed','directionalGreen','directionalBlue','unused2',
                'fogRed','fogGreen','fogBlue','unused3',
                'fogNear','fogFar','directionalXY','directionalZ',
                'directionalFade','fogClip'),
    u'C.Music': ('music',),
    u'C.Name': ('full',),
    u'C.Owner': ('ownership',),
    u'C.RecordFlags': ('flags1',), # Yes seems funky but thats the way it is
    u'C.Regions': ('regions',),
    u'C.Water': ('water','waterHeight',),
}
cellRecFlags = {
    u'C.Climate': 'behaveLikeExterior',
    u'C.Music': '',
    u'C.Name': '',
    u'C.Owner': 'publicPlace',
    u'C.Water': 'hasWater',
    u'C.Light': '',
    u'C.RecordFlags': '',
    u'C.Regions': '',
}
#------------------------------------------------------------------------------
# GraphicsPatcher
#------------------------------------------------------------------------------
graphicsTypes = {
    "ACTI": ('model',),
    "ALCH": ('iconPath','model',),
    "AMMO": ('iconPath','model',),
    "APPA": ('iconPath','model',),
    "ARMO": ('maleBody','maleWorld','maleIconPath','femaleBody','femaleWorld','femaleIconPath','flags',),
    "BOOK": ('iconPath','model',),
    "BSGN": ('iconPath',),
    "CLAS": ('iconPath',),
    "CLOT": ('maleBody','maleWorld','maleIconPath','femaleBody','femaleWorld','femaleIconPath','flags',),
    "CREA": ('bodyParts','nift_p',),
    "DOOR": ('model',),
    "EFSH": ('particleTexture','fillTexture','flags','unused1','memSBlend',
    'memBlendOp','memZFunc','fillRed','fillGreen','fillBlue',
    'unused2','fillAIn','fillAFull','fillAOut','fillAPRatio',
    'fillAAmp','fillAFreq','fillAnimSpdU','fillAnimSpdV','edgeOff',
    'edgeRed','edgeGreen','edgeBlue','unused3','edgeAIn',
    'edgeAFull','edgeAOut','edgeAPRatio','edgeAAmp','edgeAFreq',
    'fillAFRatio','edgeAFRatio','memDBlend','partSBlend',
    'partBlendOp','partZFunc','partDBlend','partBUp','partBFull',
    'partBDown','partBFRatio','partBPRatio','partLTime',
    'partLDelta','partNSpd','partNAcc','partVel1','partVel2',
    'partVel3','partAcc1','partAcc2','partAcc3','partKey1',
    'partKey2','partKey1Time','partKey2Time','key1Red','key1Green',
    'key1Blue','unused4','key2Red','key2Green','key2Blue','unused5',
    'key3Red','key3Green','key3Blue','unused6','key1A','key2A',
    'key3A','key1Time','key2Time','key3Time',),
    "EYES": ('iconPath',),
    "FLOR": ('model',),
    "FURN": ('model',),
    "GRAS": ('model',),
    "HAIR": ('iconPath','model',),
    "INGR": ('iconPath','model',),
    "KEYM": ('iconPath','model',),
    "LIGH": ('iconPath','model',),
    "LSCR": ('iconPath',),
    "LTEX": ('iconPath',),
    "MGEF": ('iconPath','model',),
    "MISC": ('iconPath','model',),
    "QUST": ('iconPath',),
    "REGN": ('iconPath',),
    "SGST": ('iconPath','model',),
    "SKIL": ('iconPath',),
    "SLGM": ('iconPath','model',),
    "STAT": ('model',),
    "TREE": ('iconPath','model',),
    "WEAP": ('iconPath','model',),
}
graphicsLongsTypes = set(graphicsTypes) # also MGEF (with different attributes)
graphicsFidTypes = {"MGEF": ('effectShader', 'enchantEffect', 'light',)}
graphicsModelAttrs = ('model',)
#------------------------------------------------------------------------------
# Inventory Patcher
#------------------------------------------------------------------------------
inventoryTypes = ('CREA','NPC_','CONT',)

#------------------------------------------------------------------------------
# Race Patcher
#------------------------------------------------------------------------------
# Note that we use _x to avoid exposing these to the dynamic importer
def _ob(_x): return u'Oblivion.esm', _x
def _cobl(_x): return u'Cobl Main.esm', _x
_standard_eyes = [_ob(_x) for _x in (0x27306, 0x27308, 0x27309)] + \
                 [_cobl(_x) for _x in (0x000821, 0x000823, 0x000825, 0x000828,
                                       0x000834, 0x000837, 0x000839, 0x00084F)]
default_eyes = {
    #--Oblivion.esm
    # Argonian
    _ob(0x23FE9): [_ob(0x3E91E)] +
                  [_cobl(_x) for _x in (0x01F407, 0x01F408, 0x01F40B, 0x01F40C,
                                        0x01F410, 0x01F411, 0x01F414, 0x01F416,
                                        0x01F417, 0x01F41A, 0x01F41B, 0x01F41E,
                                        0x01F41F, 0x01F422, 0x01F424)],
    # Breton
    _ob(0x0224FC): _standard_eyes,
    # Dark Elf
    _ob(0x0191C1): [_ob(0x27307)] +
                   [_cobl(_x) for _x in (0x000861, 0x000864, 0x000851)],
    # High Elf
    _ob(0x019204): _standard_eyes,
    # Imperial
    _ob(0x000907): _standard_eyes,
    # Khajiit
    _ob(0x022C37): [_ob(0x375c8)] +
                   [_cobl(_x) for _x in (0x00083B, 0x00083E, 0x000843,
                                         0x000846, 0x000849, 0x00084C)],
    # Nord
    _ob(0x0224FD): _standard_eyes,
    # Orc
    _ob(0x0191C0): [_ob(0x2730A)] +
                   [_cobl(_x) for _x in (0x000853, 0x000855, 0x000858,
                                         0x00085A, 0x00085C, 0x00085E)],
    # Redguard
    _ob(0x000D43): _standard_eyes,
    # Wood Elf
    _ob(0x0223C8): _standard_eyes,
    #--Cobl Main.esm
    # cobRaceAureal
    _cobl(0x07948): [_ob(0x54BBA)],
    # cobRaceHidden
    _cobl(0x02B60): [_cobl(_x) for _x in (0x01F43A, 0x01F438, 0x01F439,
                                          0x0015A7, 0x01792C, 0x0015AC,
                                          0x0015A8, 0x0015AB, 0x0015AA)],
    # cobRaceMazken
    _cobl(0x07947): [_ob(0x54BB9)],
    # cobRaceOhmes
    _cobl(0x1791B): [_cobl(_x) for _x in (0x017901, 0x017902, 0x017903,
                                          0x017904, 0x017905, 0x017906,
                                          0x017907, 0x017908, 0x017909,
                                          0x01790A, 0x01790B, 0x01790C,
                                          0x01790D, 0x01790E, 0x01790F,
                                          0x017910, 0x017911, 0x017912,
                                          0x017913, 0x017914, 0x017915,
                                          0x017916, 0x017917, 0x017918,
                                          0x017919, 0x01791A, 0x017900)],
    # cobRaceXivilai
    _cobl(0x1F43C): [_cobl(_x) for _x in (0x01F437, 0x00531B, 0x00531C,
                                          0x00531D, 0x00531E, 0x00531F,
                                          0x005320, 0x005321, 0x01F43B,
                                          0x00DBE1)],
}
# Clean these up, no need to keep them around now
del _cobl, _ob

#------------------------------------------------------------------------------
# Text Patcher
#------------------------------------------------------------------------------
text_types = {
    'BOOK': ('text',),
    'BSGN': ('text',),
    'CLAS': ('description',),
    'LSCR': ('text',),
    'MGEF': ('text',),
    # omit RACE - covered by R.Description
    'SKIL': ('description',),
}

#------------------------------------------------------------------------------
# Contents Checker
#------------------------------------------------------------------------------
# Entry types used for CONT, CREA, LVLI and NPC_
_common_entry_types = {'ALCH', 'AMMO', 'APPA', 'ARMO', 'BOOK', 'CLOT', 'INGR',
                       'KEYM', 'LIGH', 'LVLI', 'MISC', 'SGST', 'SLGM', 'WEAP'}
cc_valid_types = {
    'CONT': _common_entry_types,
    'CREA': _common_entry_types,
    'LVLC': {'CREA', 'LVLC', 'NPC_'},
    'LVLI': _common_entry_types,
    'LVSP': {'LVSP', 'SPEL'},
    'NPC_': _common_entry_types,
}
cc_passes = (
    (('LVLC', 'LVLI', 'LVSP'), 'entries', 'listId'),
    (('CONT', 'CREA', 'NPC_'), 'items', 'item'),
)

#------------------------------------------------------------------------------
# Scripts Patcher
#------------------------------------------------------------------------------
scripts_types = {'ACTI', 'ALCH', 'APPA', 'ARMO', 'BOOK', 'CLOT', 'CONT',
                 'CREA', 'DOOR', 'FLOR', 'FURN', 'INGR', 'KEYM', 'LIGH',
                 'MISC', 'NPC_', 'QUST', 'SGST', 'SLGM', 'WEAP'}

#------------------------------------------------------------------------------
# Actor Patchers
#------------------------------------------------------------------------------
actor_importer_attrs = {
    'CREA': {
        u'Actors.ACBS': ('barterGold', 'baseSpell', 'calcMax', 'calcMin',
                         'fatigue', 'flags.biped', 'flags.essential',
                         'flags.flies', 'flags.noBloodDecal',
                         'flags.noBloodSpray', 'flags.noCombatInWater',
                         'flags.noCorpseCheck', 'flags.noHead',
                         'flags.noLeftArm', 'flags.noLowLevel',
                         'flags.noRightArm', 'flags.noShadow',
                         'flags.pcLevelOffset', 'flags.respawn', 'flags.swims',
                         'flags.walks', 'flags.weaponAndShield',
                         'level'),
        u'Actors.AIData': ('aggression', 'confidence', 'energyLevel',
                           'responsibility', 'services', 'trainLevel',
                           'trainSkill'),
        u'Actors.CombatStyle': ('combatStyle',),
        u'Actors.Skeleton': ('model',),
        u'Actors.Stats': ('agility', 'attackDamage', 'combatSkill',
                          'endurance', 'health', 'intelligence', 'luck',
                          'magic', 'personality', 'soul', 'stealth', 'speed',
                          'strength', 'willpower'),
        u'Creatures.Blood': ('bloodDecalPath', 'bloodSprayPath'),
        u'Creatures.Type': ('creatureType',),
        u'NPC.Class': (),
        u'NPC.Race': (),
    },
    'NPC_': {
        u'Actors.ACBS': ('barterGold', 'baseSpell', 'calcMax', 'calcMin',
                         'fatigue', 'flags.autoCalc', 'flags.canCorpseCheck',
                         'flags.essential', 'flags.female', 'flags.noLowLevel',
                         'flags.noPersuasion', 'flags.noRumors',
                         'flags.pcLevelOffset', 'flags.respawn',
                         'flags.summonable', 'level',),
        u'Actors.AIData': ('aggression', 'confidence', 'energyLevel',
                           'responsibility', 'services', 'trainSkill',
                           'trainLevel'),
        u'Actors.CombatStyle': ('combatStyle',),
        u'Actors.Skeleton': ('model',),
        u'Actors.Stats': ('attributes', 'health', 'skills',),
        u'Creatures.Blood': (),
        u'Creatures.Type': (),
        u'NPC.Class': ('iclass',),
        u'NPC.Race': ('race',),
    },
}
actor_importer_auto_key = {
    u'Actors.ACBS', u'Actors.AIData', u'Actors.CombatStyle',
    u'Actors.Skeleton', u'Actors.Stats', u'Creatures.Blood', u'Creatures.Type',
    u'NPC.Class', u'NPC.Race',
}
actor_types = ('CREA', 'NPC_')

#------------------------------------------------------------------------------
# Spell Stats Patcher
#------------------------------------------------------------------------------
spell_stats_attrs = ('eid', 'full', 'cost', 'level', 'spellType',)

#------------------------------------------------------------------------------
# Actor Tweaker
#------------------------------------------------------------------------------
actor_tweaks = {
    u'VORB_NPCSkeletonPatcher',
    u'MAONPCSkeletonPatcher',
    u'VanillaNPCSkeletonPatcher',
    u'RedguardNPCPatcher',
    u'NoBloodCreaturesPatcher',
    u'AsIntendedImpsPatcher',
    u'AsIntendedBoarsPatcher',
    u'QuietFeetPatcher',
    u'IrresponsibleCreaturesPatcher',
    u'RWALKNPCAnimationPatcher',
    u'SWALKNPCAnimationPatcher',
}

#------------------------------------------------------------------------------
# Names Tweaker
#------------------------------------------------------------------------------
body_tags = u'ARGHTCCPBS'

#------------------------------------------------------------------------------
# Magic Effects
#------------------------------------------------------------------------------
import struct as _struct # hide from dynamic importer
_strU = _struct.Struct('I').unpack
generic_av_effects = {
    'ABAT', #--Absorb Attribute (Use Attribute)
    'ABSK', #--Absorb Skill (Use Skill)
    'DGAT', #--Damage Attribute (Use Attribute)
    'DRAT', #--Drain Attribute (Use Attribute)
    'DRSK', #--Drain Skill (Use Skill)
    'FOAT', #--Fortify Attribute (Use Attribute)
    'FOSK', #--Fortify Skill (Use Skill)
    'REAT', #--Restore Attribute (Use Attribute)
}
generic_av_effects |= set((_strU(x)[0] for x in generic_av_effects))
hostile_effects = {
    'ABAT', #--Absorb Attribute
    'ABFA', #--Absorb Fatigue
    'ABHE', #--Absorb Health
    'ABSK', #--Absorb Skill
    'ABSP', #--Absorb Magicka
    'BRDN', #--Burden
    'DEMO', #--Demoralize
    'DGAT', #--Damage Attribute
    'DGFA', #--Damage Fatigue
    'DGHE', #--Damage Health
    'DGSP', #--Damage Magicka
    'DIAR', #--Disintegrate Armor
    'DIWE', #--Disintegrate Weapon
    'DRAT', #--Drain Attribute
    'DRFA', #--Drain Fatigue
    'DRHE', #--Drain Health
    'DRSK', #--Drain Skill
    'DRSP', #--Drain Magicka
    'FIDG', #--Fire Damage
    'FRDG', #--Frost Damage
    'FRNZ', #--Frenzy
    'PARA', #--Paralyze
    'SHDG', #--Shock Damage
    'SLNC', #--Silence
    'STMA', #--Stunted Magicka
    'STRP', #--Soul Trap
    'SUDG', #--Sun Damage
    'TURN', #--Turn Undead
    'WKDI', #--Weakness to Disease
    'WKFI', #--Weakness to Fire
    'WKFR', #--Weakness to Frost
    'WKMA', #--Weakness to Magic
    'WKNW', #--Weakness to Normal Weapons
    'WKPO', #--Weakness to Poison
    'WKSH', #--Weakness to Shock
}
hostile_effects |= set((_strU(x)[0] for x in hostile_effects))
_magic_effects = {
    'ABAT': [5, _(u'Absorb Attribute'), 0.95],
    'ABFA': [5, _(u'Absorb Fatigue'), 6],
    'ABHE': [5, _(u'Absorb Health'), 16],
    'ABSK': [5, _(u'Absorb Skill'), 2.1],
    'ABSP': [5, _(u'Absorb Magicka'), 7.5],
    'BA01': [1, _(u'Bound Armor Extra 01'), 0],#--Formid == 0
    'BA02': [1, _(u'Bound Armor Extra 02'), 0],#--Formid == 0
    'BA03': [1, _(u'Bound Armor Extra 03'), 0],#--Formid == 0
    'BA04': [1, _(u'Bound Armor Extra 04'), 0],#--Formid == 0
    'BA05': [1, _(u'Bound Armor Extra 05'), 0],#--Formid == 0
    'BA06': [1, _(u'Bound Armor Extra 06'), 0],#--Formid == 0
    'BA07': [1, _(u'Bound Armor Extra 07'), 0],#--Formid == 0
    'BA08': [1, _(u'Bound Armor Extra 08'), 0],#--Formid == 0
    'BA09': [1, _(u'Bound Armor Extra 09'), 0],#--Formid == 0
    'BA10': [1, _(u'Bound Armor Extra 10'), 0],#--Formid == 0
    'BABO': [1, _(u'Bound Boots'), 12],
    'BACU': [1, _(u'Bound Cuirass'), 12],
    'BAGA': [1, _(u'Bound Gauntlets'), 8],
    'BAGR': [1, _(u'Bound Greaves'), 12],
    'BAHE': [1, _(u'Bound Helmet'), 12],
    'BASH': [1, _(u'Bound Shield'), 12],
    'BRDN': [0, _(u'Burden'), 0.21],
    'BW01': [1, _(u'Bound Order Weapon 1'), 1],
    'BW02': [1, _(u'Bound Order Weapon 2'), 1],
    'BW03': [1, _(u'Bound Order Weapon 3'), 1],
    'BW04': [1, _(u'Bound Order Weapon 4'), 1],
    'BW05': [1, _(u'Bound Order Weapon 5'), 1],
    'BW06': [1, _(u'Bound Order Weapon 6'), 1],
    'BW07': [1, _(u'Summon Staff of Sheogorath'), 1],
    'BW08': [1, _(u'Bound Priest Dagger'), 1],
    'BW09': [1, _(u'Bound Weapon Extra 09'), 0],#--Formid == 0
    'BW10': [1, _(u'Bound Weapon Extra 10'), 0],#--Formid == 0
    'BWAX': [1, _(u'Bound Axe'), 39],
    'BWBO': [1, _(u'Bound Bow'), 95],
    'BWDA': [1, _(u'Bound Dagger'), 14],
    'BWMA': [1, _(u'Bound Mace'), 91],
    'BWSW': [1, _(u'Bound Sword'), 235],
    'CALM': [3, _(u'Calm'), 0.47],
    'CHML': [3, _(u'Chameleon'), 0.63],
    'CHRM': [3, _(u'Charm'), 0.2],
    'COCR': [3, _(u'Command Creature'), 0.6],
    'COHU': [3, _(u'Command Humanoid'), 0.75],
    'CUDI': [5, _(u'Cure Disease'), 1400],
    'CUPA': [5, _(u'Cure Paralysis'), 500],
    'CUPO': [5, _(u'Cure Poison'), 600],
    'DARK': [3, _(u'DO NOT USE - Darkness'), 0],
    'DEMO': [3, _(u'Demoralize'), 0.49],
    'DGAT': [2, _(u'Damage Attribute'), 100],
    'DGFA': [2, _(u'Damage Fatigue'), 4.4],
    'DGHE': [2, _(u'Damage Health'), 12],
    'DGSP': [2, _(u'Damage Magicka'), 2.45],
    'DIAR': [2, _(u'Disintegrate Armor'), 6.2],
    'DISE': [2, _(u'Disease Info'), 0], #--Formid == 0
    'DIWE': [2, _(u'Disintegrate Weapon'), 6.2],
    'DRAT': [2, _(u'Drain Attribute'), 0.7],
    'DRFA': [2, _(u'Drain Fatigue'), 0.18],
    'DRHE': [2, _(u'Drain Health'), 0.9],
    'DRSK': [2, _(u'Drain Skill'), 0.65],
    'DRSP': [2, _(u'Drain Magicka'), 0.18],
    'DSPL': [4, _(u'Dispel'), 3.6],
    'DTCT': [4, _(u'Detect Life'), 0.08],
    'DUMY': [2, _(u'Mehrunes Dagon'), 0], #--Formid == 0
    'FIDG': [2, _(u'Fire Damage'), 7.5],
    'FISH': [0, _(u'Fire Shield'), 0.95],
    'FOAT': [5, _(u'Fortify Attribute'), 0.6],
    'FOFA': [5, _(u'Fortify Fatigue'), 0.04],
    'FOHE': [5, _(u'Fortify Health'), 0.14],
    'FOMM': [5, _(u'Fortify Magicka Multiplier'), 0.04],
    'FOSK': [5, _(u'Fortify Skill'), 0.6],
    'FOSP': [5, _(u'Fortify Magicka'), 0.15],
    'FRDG': [2, _(u'Frost Damage'), 7.4],
    'FRNZ': [3, _(u'Frenzy'), 0.04],
    'FRSH': [0, _(u'Frost Shield'), 0.95],
    'FTHR': [0, _(u'Feather'), 0.1],
    'INVI': [3, _(u'Invisibility'), 40],
    'LGHT': [3, _(u'Light'), 0.051],
    'LISH': [0, _(u'Shock Shield'), 0.95],
    'LOCK': [0, _(u'DO NOT USE - Lock'), 30],
    'MYHL': [1, _(u'Summon Mythic Dawn Helm'), 110],
    'MYTH': [1, _(u'Summon Mythic Dawn Armor'), 120],
    'NEYE': [3, _(u'Night-Eye'), 22],
    'OPEN': [0, _(u'Open'), 4.3],
    'PARA': [3, _(u'Paralyze'), 475],
    'POSN': [2, _(u'Poison Info'), 0],
    'RALY': [3, _(u'Rally'), 0.03],
    'REAN': [1, _(u'Reanimate'), 10],
    'REAT': [5, _(u'Restore Attribute'), 38],
    'REDG': [4, _(u'Reflect Damage'), 2.5],
    'REFA': [5, _(u'Restore Fatigue'), 2],
    'REHE': [5, _(u'Restore Health'), 10],
    'RESP': [5, _(u'Restore Magicka'), 2.5],
    'RFLC': [4, _(u'Reflect Spell'), 3.5],
    'RSDI': [5, _(u'Resist Disease'), 0.5],
    'RSFI': [5, _(u'Resist Fire'), 0.5],
    'RSFR': [5, _(u'Resist Frost'), 0.5],
    'RSMA': [5, _(u'Resist Magic'), 2],
    'RSNW': [5, _(u'Resist Normal Weapons'), 1.5],
    'RSPA': [5, _(u'Resist Paralysis'), 0.75],
    'RSPO': [5, _(u'Resist Poison'), 0.5],
    'RSSH': [5, _(u'Resist Shock'), 0.5],
    'RSWD': [5, _(u'Resist Water Damage'), 0], #--Formid == 0
    'SABS': [4, _(u'Spell Absorption'), 3],
    'SEFF': [0, _(u'Script Effect'), 0],
    'SHDG': [2, _(u'Shock Damage'), 7.8],
    'SHLD': [0, _(u'Shield'), 0.45],
    'SLNC': [3, _(u'Silence'), 60],
    'STMA': [2, _(u'Stunted Magicka'), 0],
    'STRP': [4, _(u'Soul Trap'), 30],
    'SUDG': [2, _(u'Sun Damage'), 9],
    'TELE': [4, _(u'Telekinesis'), 0.49],
    'TURN': [1, _(u'Turn Undead'), 0.083],
    'VAMP': [2, _(u'Vampirism'), 0],
    'WABR': [0, _(u'Water Breathing'), 14.5],
    'WAWA': [0, _(u'Water Walking'), 13],
    'WKDI': [2, _(u'Weakness to Disease'), 0.12],
    'WKFI': [2, _(u'Weakness to Fire'), 0.1],
    'WKFR': [2, _(u'Weakness to Frost'), 0.1],
    'WKMA': [2, _(u'Weakness to Magic'), 0.25],
    'WKNW': [2, _(u'Weakness to Normal Weapons'), 0.25],
    'WKPO': [2, _(u'Weakness to Poison'), 0.1],
    'WKSH': [2, _(u'Weakness to Shock'), 0.1],
    'Z001': [1, _(u'Summon Rufio\'s Ghost'), 13],
    'Z002': [1, _(u'Summon Ancestor Guardian'), 33.3],
    'Z003': [1, _(u'Summon Spiderling'), 45],
    'Z004': [1, _(u'Summon Flesh Atronach'), 1],
    'Z005': [1, _(u'Summon Bear'), 47.3],
    'Z006': [1, _(u'Summon Gluttonous Hunger'), 61],
    'Z007': [1, _(u'Summon Ravenous Hunger'), 123.33],
    'Z008': [1, _(u'Summon Voracious Hunger'), 175],
    'Z009': [1, _(u'Summon Dark Seducer'), 1],
    'Z010': [1, _(u'Summon Golden Saint'), 1],
    'Z011': [1, _(u'Wabba Summon'), 0],
    'Z012': [1, _(u'Summon Decrepit Shambles'), 45],
    'Z013': [1, _(u'Summon Shambles'), 87.5],
    'Z014': [1, _(u'Summon Replete Shambles'), 150],
    'Z015': [1, _(u'Summon Hunger'), 22],
    'Z016': [1, _(u'Summon Mangled Flesh Atronach'), 22],
    'Z017': [1, _(u'Summon Torn Flesh Atronach'), 32.5],
    'Z018': [1, _(u'Summon Stitched Flesh Atronach'), 75.5],
    'Z019': [1, _(u'Summon Sewn Flesh Atronach'), 195],
    'Z020': [1, _(u'Extra Summon 20'), 0],
    'ZCLA': [1, _(u'Summon Clannfear'), 75.56],
    'ZDAE': [1, _(u'Summon Daedroth'), 123.33],
    'ZDRE': [1, _(u'Summon Dremora'), 72.5],
    'ZDRL': [1, _(u'Summon Dremora Lord'), 157.14],
    'ZFIA': [1, _(u'Summon Flame Atronach'), 45],
    'ZFRA': [1, _(u'Summon Frost Atronach'), 102.86],
    'ZGHO': [1, _(u'Summon Ghost'), 22],
    'ZHDZ': [1, _(u'Summon Headless Zombie'), 56],
    'ZLIC': [1, _(u'Summon Lich'), 350],
    'ZSCA': [1, _(u'Summon Scamp'), 30],
    'ZSKA': [1, _(u'Summon Skeleton Guardian'), 32.5],
    'ZSKC': [1, _(u'Summon Skeleton Champion'), 152],
    'ZSKE': [1, _(u'Summon Skeleton'), 11.25],
    'ZSKH': [1, _(u'Summon Skeleton Hero'), 66],
    'ZSPD': [1, _(u'Summon Spider Daedra'), 195],
    'ZSTA': [1, _(u'Summon Storm Atronach'), 125],
    'ZWRA': [1, _(u'Summon Faded Wraith'), 87.5],
    'ZWRL': [1, _(u'Summon Gloom Wraith'), 260],
    'ZXIV': [1, _(u'Summon Xivilai'), 200],
    'ZZOM': [1, _(u'Summon Zombie'), 16.67],
}
# Note that ordering matters here, because of py2 bleeding the parameters into
# the outer scope. Also, we have to use underscores to hide them from the
# dynamic importer. Ugh.
mgef_school = dict((_x, _y) for _x, [_y, _z, _num] in _magic_effects.items())
mgef_name = dict((_x, _z) for _x, [_y, _z, __num] in _magic_effects.items())
mgef_basevalue = dict((_x, _a) for _x, [_y, _z, _a] in _magic_effects.items())
mgef_school.update({_strU(_x)[0]: _y for _x, [_y, _z, _a]
                    in _magic_effects.items()})
mgef_name.update({_strU(_x)[0]: _z for _x, [_y, _z, _a]
                  in _magic_effects.items()})
mgef_basevalue.update({_strU(_x)[0]: _a for _x, [_y, _z, _a]
                       in _magic_effects.items()})
# Clean this up, no need to keep it around now
del _strU

# TODO(inf) This could be updated for other games, see links below. Not done
#  yet because it's only used in completely Oblivion-specific code
# FO3/FNV: https://geck.bethsoft.com/index.php?title=Actor_Value_Codes
# TES5: https://en.uesp.net/wiki/Tes5Mod:Actor_Value_Indices
actor_values = [
    _(u'Strength'), #--00
    _(u'Intelligence'),
    _(u'Willpower'),
    _(u'Agility'),
    _(u'Speed'),
    _(u'Endurance'),
    _(u'Personality'),
    _(u'Luck'),
    _(u'Health'),
    _(u'Magicka'),

    _(u'Fatigue'), #--10
    _(u'Encumbrance'),
    _(u'Armorer'),
    _(u'Athletics'),
    _(u'Blade'),
    _(u'Block'),
    _(u'Blunt'),
    _(u'Hand To Hand'),
    _(u'Heavy Armor'),
    _(u'Alchemy'),

    _(u'Alteration'), #--20
    _(u'Conjuration'),
    _(u'Destruction'),
    _(u'Illusion'),
    _(u'Mysticism'),
    _(u'Restoration'),
    _(u'Acrobatics'),
    _(u'Light Armor'),
    _(u'Marksman'),
    _(u'Mercantile'),

    _(u'Security'), #--30
    _(u'Sneak'),
    _(u'Speechcraft'),
    u'Aggression', # TODO(inf) Why do the translations stop here??
    u'Confidence',
    u'Energy',
    u'Responsibility',
    u'Bounty',
    u'UNKNOWN 38',
    u'UNKNOWN 39',

    u'MagickaMultiplier', #--40
    u'NightEyeBonus',
    u'AttackBonus',
    u'DefendBonus',
    u'CastingPenalty',
    u'Blindness',
    u'Chameleon',
    u'Invisibility',
    u'Paralysis',
    u'Silence',

    u'Confusion', #--50
    u'DetectItemRange',
    u'SpellAbsorbChance',
    u'SpellReflectChance',
    u'SwimSpeedMultiplier',
    u'WaterBreathing',
    u'WaterWalking',
    u'StuntedMagicka',
    u'DetectLifeRange',
    u'ReflectDamage',

    u'Telekinesis', #--60
    u'ResistFire',
    u'ResistFrost',
    u'ResistDisease',
    u'ResistMagic',
    u'ResistNormalWeapons',
    u'ResistParalysis',
    u'ResistPoison',
    u'ResistShock',
    u'Vampirism',

    u'Darkness', #--70
    u'ResistWaterDamage',
]

#------------------------------------------------------------------------------
# Relations Patcher
#------------------------------------------------------------------------------
relations_attrs = (u'faction', u'mod')
relations_csv_header = u'"%s","%s","%s","%s","%s","%s","%s"\n' % (
    _(u'Main Eid'), _(u'Main Mod'), _(u'Main Object'), _(u'Other Eid'),
    _(u'Other Mod'), _(u'Other Object'), _(u'Modifier'))
relations_csv_row_format = u'"%s","%s","0x%06X","%s","%s","0x%06X","%s"\n'

# Record type to name dictionary
record_type_name = {
    'ALCH': _(u'Potions'),
    'AMMO': _(u'Ammo'),
    'APPA': _(u'Apparatuses'),
    'ARMO': _(u'Armors'),
    'BOOK': _(u'Books'),
    'CLOT': _(u'Clothes'),
    'INGR': _(u'Ingredients'),
    'KEYM': _(u'Keys'),
    'LIGH': _(u'Lights'),
    'MISC': _(u'Misc'),
    'SGST': _(u'Sigil Stones'),
    'SLGM': _(u'Soulgems'),
    'SPEL': _(u'Spells'),
    'WEAP': _(u'Weapons'),
}
