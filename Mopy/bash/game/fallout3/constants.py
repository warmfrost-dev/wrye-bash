# -*- coding: utf-8 -*-
#
# GPL License and Copyright Notice ============================================
#  This file is part of Wrye Bash.
#
#  Wrye Bash is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  Wrye Bash is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Wrye Bash; if not, write to the Free Software Foundation,
#  Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#  Wrye Bash copyright (C) 2005-2009 Wrye, 2010-2020 Wrye Bash Team
#  https://github.com/wrye-bash
#
# =============================================================================

#--Game ESM/ESP/BSA files
#  These filenames need to be in lowercase,
bethDataFiles = {
    #--Vanilla
    u'fallout3.esm',
    u'fallout - menuvoices.bsa',
    u'fallout - meshes.bsa',
    u'fallout - misc.bsa',
    u'fallout - sound.bsa',
    u'fallout - textures.bsa',
    u'fallout - voices.bsa',
    #-- DLC
    u'anchorage.esm',
    u'anchorage - main.bsa',
    u'anchorage - sounds.bsa',
    u'thepitt.esm',
    u'thepitt - main.bsa',
    u'thepitt - sounds.bsa',
    u'brokensteel.esm',
    u'brokensteel - main.bsa',
    u'brokensteel - sounds.bsa',
    u'pointlookout.esm',
    u'pointlookout - main.bsa',
    u'pointlookout - sounds.bsa',
    u'zeta.esm',
    u'zeta - main.bsa',
    u'zeta - sounds.bsa',
}

# Function Info ---------------------------------------------------------------
# Needs to be public so we can import it for FNV
# 0: no param; 1: int param; 2: formid param; 3: float param
condition_function_data = {
    1:    (u'GetDistance', 2, 0),
    5:    (u'GetLocked', 0, 0),
    6:    (u'GetPos', 0, 0),
    8:    (u'GetAngle', 0, 0),
    10:   (u'GetStartingPos', 0, 0),
    11:   (u'GetStartingAngle', 0, 0),
    12:   (u'GetSecondsPassed', 0, 0),
    14:   (u'GetActorValue', 2, 0),
    18:   (u'GetCurrentTime', 0, 0),
    24:   (u'GetScale', 0, 0),
    25:   (u'IsMoving', 0, 0),
    26:   (u'IsTurning', 0, 0),
    27:   (u'GetLineOfSight', 2, 0),
    32:   (u'GetInSameCell', 2, 0),
    35:   (u'GetDisabled', 0, 0),
    36:   (u'MenuMode', 1, 0),
    39:   (u'GetDisease', 0, 0),
    40:   (u'GetVampire', 0, 0),
    41:   (u'GetClothingValue', 0, 0),
    42:   (u'SameFaction', 2, 0),
    43:   (u'SameRace', 2, 0),
    44:   (u'SameSex', 2, 0),
    45:   (u'GetDetected', 2, 0),
    46:   (u'GetDead', 0, 0),
    47:   (u'GetItemCount', 2, 0),
    48:   (u'GetGold', 0, 0),
    49:   (u'GetSleeping', 0, 0),
    50:   (u'GetTalkedToPC', 0, 0),
    53:   (u'GetScriptVariable', 2, 0),
    56:   (u'GetQuestRunning', 2, 0),
    58:   (u'GetStage', 2, 0),
    59:   (u'GetStageDone', 2, 1),
    60:   (u'GetFactionRankDifference', 2, 2),
    61:   (u'GetAlarmed', 0, 0),
    62:   (u'IsRaining', 0, 0),
    63:   (u'GetAttacked', 0, 0),
    64:   (u'GetIsCreature', 0, 0),
    65:   (u'GetLockLevel', 0, 0),
    66:   (u'GetShouldAttack', 2, 0),
    67:   (u'GetInCell', 2, 0),
    68:   (u'GetIsClass', 2, 0),
    69:   (u'GetIsRace', 2, 0),
    70:   (u'GetIsSex', 1, 0),
    71:   (u'GetInFaction', 2, 0),
    72:   (u'GetIsID', 2, 0),
    73:   (u'GetFactionRank', 2, 0),
    74:   (u'GetGlobalValue', 2, 0),
    75:   (u'IsSnowing', 0, 0),
    76:   (u'GetDisposition', 2, 0),
    77:   (u'GetRandomPercent', 0, 0),
    79:   (u'GetQuestVariable', 2, 0),
    80:   (u'GetLevel', 0, 0),
    81:   (u'GetArmorRating', 0, 0),
    84:   (u'GetDeadCount', 2, 0),
    91:   (u'GetIsAlerted', 0, 0),
    98:   (u'GetPlayerControlsDisabled', 1, 1),
    99:   (u'GetHeadingAngle', 2, 0),
    101:  (u'IsWeaponOut', 0, 0),
    102:  (u'IsTorchOut', 0, 0),
    103:  (u'IsShieldOut', 0, 0),
    106:  (u'IsFacingUp', 0, 0),
    107:  (u'GetKnockedState', 0, 0),
    108:  (u'GetWeaponAnimType', 0, 0),
    109:  (u'IsWeaponSkillType', 2, 0),
    110:  (u'GetCurrentAIPackage', 0, 0),
    111:  (u'IsWaiting', 0, 0),
    112:  (u'IsIdlePlaying', 0, 0),
    116:  (u'GetMinorCrimeCount', 0, 0),
    117:  (u'GetMajorCrimeCount', 0, 0),
    118:  (u'GetActorAggroRadiusViolated', 0, 0),
    122:  (u'GetCrime', 2, 1),
    123:  (u'IsGreetingPlayer', 0, 0),
    125:  (u'IsGuard', 0, 0),
    127:  (u'HasBeenEaten', 0, 0),
    128:  (u'GetFatiguePercentage', 0, 0),
    129:  (u'GetPCIsClass', 2, 0),
    130:  (u'GetPCIsRace', 2, 0),
    131:  (u'GetPCIsSex', 1, 0),
    132:  (u'GetPCInFaction', 2, 0),
    133:  (u'SameFactionAsPC', 0, 0),
    134:  (u'SameRaceAsPC', 0, 0),
    135:  (u'SameSexAsPC', 0, 0),
    136:  (u'GetIsReference', 2, 0),
    141:  (u'IsTalking', 0, 0),
    142:  (u'GetWalkSpeed', 0, 0),
    143:  (u'GetCurrentAIProcedure', 0, 0),
    144:  (u'GetTrespassWarningLevel', 0, 0),
    145:  (u'IsTrespassing', 0, 0),
    146:  (u'IsInMyOwnedCell', 0, 0),
    147:  (u'GetWindSpeed', 0, 0),
    148:  (u'GetCurrentWeatherPercent', 0, 0),
    149:  (u'GetIsCurrentWeather', 2, 0),
    150:  (u'IsContinuingPackagePCNear', 0, 0),
    153:  (u'CanHaveFlames', 0, 0),
    154:  (u'HasFlames', 0, 0),
    157:  (u'GetOpenState', 0, 0),
    159:  (u'GetSitting', 0, 0),
    160:  (u'GetFurnitureMarkerID', 0, 0),
    161:  (u'GetIsCurrentPackage', 2, 0),
    162:  (u'IsCurrentFurnitureRef', 2, 0),
    163:  (u'IsCurrentFurnitureObj', 2, 0),
    170:  (u'GetDayOfWeek', 0, 0),
    172:  (u'GetTalkedToPCParam', 2, 0),
    175:  (u'IsPCSleeping', 0, 0),
    176:  (u'IsPCAMurderer', 0, 0),
    180:  (u'GetDetectionLevel', 2, 0),
    182:  (u'GetEquipped', 2, 0),
    185:  (u'IsSwimming', 0, 0),
    190:  (u'GetAmountSoldStolen', 0, 0),
    192:  (u'GetIgnoreCrime', 0, 0),
    193:  (u'GetPCExpelled', 2, 0),
    195:  (u'GetPCFactionMurder', 2, 0),
    197:  (u'GetPCEnemyofFaction', 2, 0),
    199:  (u'GetPCFactionAttack', 2, 0),
    203:  (u'GetDestroyed', 0, 0),
    214:  (u'HasMagicEffect', 2, 0),
    215:  (u'GetDefaultOpen', 0, 0),
    219:  (u'GetAnimAction', 0, 0),
    223:  (u'IsSpellTarget', 2, 0),
    224:  (u'GetVATSMode', 0, 0),
    225:  (u'GetPersuasionNumber', 0, 0),
    226:  (u'GetSandman', 0, 0),
    227:  (u'GetCannibal', 0, 0),
    228:  (u'GetIsClassDefault', 2, 0),
    229:  (u'GetClassDefaultMatch', 0, 0),
    230:  (u'GetInCellParam', 2, 2),
    235:  (u'GetVatsTargetHeight', 0, 0),
    237:  (u'GetIsGhost', 0, 0),
    242:  (u'GetUnconscious', 0, 0),
    244:  (u'GetRestrained', 0, 0),
    246:  (u'GetIsUsedItem', 2, 0),
    247:  (u'GetIsUsedItemType', 2, 0),
    254:  (u'GetIsPlayableRace', 0, 0),
    255:  (u'GetOffersServicesNow', 0, 0),
    258:  (u'GetUsedItemLevel', 0, 0),
    259:  (u'GetUsedItemActivate', 0, 0),
    264:  (u'GetBarterGold', 0, 0),
    265:  (u'IsTimePassing', 0, 0),
    266:  (u'IsPleasant', 0, 0),
    267:  (u'IsCloudy', 0, 0),
    274:  (u'GetArmorRatingUpperBody', 0, 0),
    277:  (u'GetBaseActorValue', 2, 0),
    278:  (u'IsOwner', 2, 0),
    280:  (u'IsCellOwner', 2, 2),
    282:  (u'IsHorseStolen', 0, 0),
    285:  (u'IsLeftUp', 0, 0),
    286:  (u'IsSneaking', 0, 0),
    287:  (u'IsRunning', 0, 0),
    288:  (u'GetFriendHit', 0, 0),
    289:  (u'IsInCombat', 0, 0),
    300:  (u'IsInInterior', 0, 0),
    304:  (u'IsWaterObject', 0, 0),
    306:  (u'IsActorUsingATorch', 0, 0),
    309:  (u'IsXBox', 0, 0),
    310:  (u'GetInWorldspace', 2, 0),
    312:  (u'GetPCMiscStat', 0, 0),
    313:  (u'IsActorEvil', 0, 0),
    314:  (u'IsActorAVictim', 0, 0),
    315:  (u'GetTotalPersuasionNumber', 0, 0),
    318:  (u'GetIdleDoneOnce', 0, 0),
    320:  (u'GetNoRumors', 0, 0),
    323:  (u'WhichServiceMenu', 0, 0),
    327:  (u'IsRidingHorse', 0, 0),
    332:  (u'IsInDangerousWater', 0, 0),
    338:  (u'GetIgnoreFriendlyHits', 0, 0),
    339:  (u'IsPlayersLastRiddenHorse', 0, 0),
    353:  (u'IsActor', 0, 0),
    354:  (u'IsEssential', 0, 0),
    358:  (u'IsPlayerMovingIntoNewSpace', 0, 0),
    361:  (u'GetTimeDead', 0, 0),
    362:  (u'GetPlayerHasLastRiddenHorse', 0, 0),
    365:  (u'IsChild', 0, 0),
    367:  (u'GetLastPlayerAction', 0, 0),
    368:  (u'IsPlayerActionActive', 1, 0),
    370:  (u'IsTalkingActivatorActor', 2, 0),
    372:  (u'IsInList', 2, 0),
    382:  (u'GetHasNote', 2, 0),
    391:  (u'GetHitLocation', 0, 0),
    392:  (u'IsPC1stPerson', 0, 0),
    397:  (u'GetCauseofDeath', 0, 0),
    398:  (u'IsLimbGone', 1, 0),
    399:  (u'IsWeaponInList', 2, 0),
    403:  (u'HasFriendDisposition', 0, 0),
    # We set the second to 'unused' here to receive it as 4 bytes, which we
    # then handle inside MelCtdaFo3.
    408:  (u'GetVATSValue', 1, 0),
    409:  (u'IsKiller', 2, 0),
    410:  (u'IsKillerObject', 2, 0),
    411:  (u'GetFactionCombatReaction', 2, 2),
    415:  (u'Exists', 2, 0),
    416:  (u'GetGroupMemberCount', 0, 0),
    417:  (u'GetGroupTargetCount', 0, 0),
    427:  (u'GetIsVoiceType', 0, 0),
    428:  (u'GetPlantedExplosive', 0, 0),
    430:  (u'IsActorTalkingThroughActivator', 0, 0),
    431:  (u'GetHealthPercentage', 0, 0),
    433:  (u'GetIsObjectType', 2, 0),
    435:  (u'GetDialogueEmotion', 0, 0),
    436:  (u'GetDialogueEmotionValue', 0, 0),
    438:  (u'GetIsCreatureType', 1, 0),
    446:  (u'GetInZone', 2, 0),
    449:  (u'HasPerk', 2, 0),
    450:  (u'GetFactionRelation', 2, 0),
    451:  (u'IsLastIdlePlayed', 2, 0),
    454:  (u'GetPlayerTeammate', 0, 0),
    455:  (u'GetPlayerTeammateCount', 0, 0),
    459:  (u'GetActorCrimePlayerEnemy', 0, 0),
    460:  (u'GetActorFactionPlayerEnemy', 0, 0),
    464:  (u'IsPlayerGrabbedRef', 2, 0),
    471:  (u'GetDestructionStage', 0, 0),
    474:  (u'GetIsAlignment', 1, 0),
    478:  (u'GetThreatRatio', 2, 0),
    480:  (u'GetIsUsedItemEquipType', 1, 0),
    489:  (u'GetConcussed', 0, 0),
    492:  (u'GetMapMarkerVisible', 0, 0),
    495:  (u'GetPermanentActorValue', 2, 0),
    496:  (u'GetKillingBlowLimb', 0, 0),
    500:  (u'GetWeaponHealthPerc', 0, 0),
    503:  (u'GetRadiationLevel', 0, 0),
    510:  (u'GetLastHitCritical', 0, 0),
    515:  (u'IsCombatTarget', 2, 0),
    518:  (u'GetVATSRightAreaFree', 2, 0),
    519:  (u'GetVATSLeftAreaFree', 2, 0),
    520:  (u'GetVATSBackAreaFree', 2, 0),
    521:  (u'GetVATSFrontAreaFree', 2, 0),
    522:  (u'GetIsLockBroken', 0, 0),
    523:  (u'IsPS3', 0, 0),
    524:  (u'IsWin32', 0, 0),
    525:  (u'GetVATSRightTargetVisible', 2, 0),
    526:  (u'GetVATSLeftTargetVisible', 2, 0),
    527:  (u'GetVATSBackTargetVisible', 2, 0),
    528:  (u'GetVATSFrontTargetVisible', 2, 0),
    531:  (u'IsInCriticalStage', 1, 0),
    533:  (u'GetXPForNextLevel', 0, 0),
    546:  (u'GetQuestCompleted', 2, 0),
    550:  (u'IsGoreDisabled', 0, 0),
    555:  (u'GetSpellUsageNum', 2, 0),
    557:  (u'GetActorsInHigh', 0, 0),
    558:  (u'HasLoaded3D', 0, 0),
    
    # extended by FOSE
    1024: (u'GetFOSEVersion', 0, 0),
    1025: (u'GetFOSERevision', 0, 0),
    1028: (u'GetWeight', 2, 0),
    1082: (u'IsKeyPressed', 1, 0),
    1165: (u'GetWeaponHasScope', 2, 0),
    1166: (u'IsControlPressed', 1, 0),
    1213: (u'GetFOSEBeta', 0, 0),
}
getvatsvalue_index = 408

#--List of GMST's in the main plugin (Fallout3.esm) that have 0x00000000
#  as the form id.  Any GMST as such needs its Editor Id listed here.
gmstEids = [
    'fPlayerDeathReloadTime', 'iMapMarkerVisibleDistance',
    'fVanityModeWheelMax', 'fChase3rdPersonZUnitsPerSecond',
    'fAutoAimMaxDegreesMiss', 'iHoursToRespawnCell', 'fEssentialDeathTime',
    'fJumpHeightMin', 'fPlayerPipBoyLightTimer', 'iAINumberActorsComplexScene',
    'iHackingMaxWords', 'fGunShellLifetime', 'fGunShellCameraDistance',
    'fGunDecalCameraDistance', 'iDebrisMaxCount', 'iHackingDumpRate',
    'iHackingInputRate', 'iHackingOutputRate', 'iHackingFlashOffDuration',
    'iHackingFlashOnDuration', 'iComputersDisplayRateMenus',
    'iComputersDisplayRateNotes', 'iInventoryAskQuantityAt',
    'iNumberActorsInCombatPlayer', 'iNumberActorsAllowedToFollowPlayer',
    'iRemoveExcessDeadCount', 'iRemoveExcessDeadTotalActorCount',
    'iRemoveExcessDeadComplexTotalActorCount', 'iRemoveExcessDeadComplexCount',
    'fRemoveExcessDeadTime', 'fRemoveExcessComplexDeadTime',
    'iLevItemLevelDifferenceMax', 'fMoveWeightMax',
]

GlobalsTweaks = [
    (_(u'World: Timescale'),_(u'Timescale will be set to:'),
        u'timescale',
        (u'1',         1),
        (u'8',         8),
        (u'10',        10),
        (u'12',        12),
        (u'20',        20),
        (u'24',        24),
        (u'[30]',      30),
        (u'40',        40),
        (_(u'Custom'), 30),
        ),
    ]

GmstTweaks = [
    (_(u'Camera: Chase Distance'),
     _(u'Distance camera can be moved away from PC using mouse wheel.'),
        (u'fVanityModeWheelMax', u'fChase3rdPersonZUnitsPerSecond'),
        (u'x 1.5',     600.0*1.5, 800.0*1.5),
        (u'x 2',       600.0*2.0, 800.0*2),
        (u'x 3',       600.0*3.0, 800.0*3),
        (u'x 5',       600.0*5.0, 800.0*5),
        (u'x 10',      600.0*10,  5000),
        (_(u'Custom'), 600,       800),
        ),
    (_(u'Compass: Recognition Distance'),
     _(u'Distance at which markers (dungeons, towns etc.) begin to show on '
       u'the compass.'),
     (u'iMapMarkerVisibleDistance',),
        (_(u'75% Shorter'), 3125),
        (_(u'50% Shorter'), 6250),
        (_(u'25% Shorter'), 9375),
        (_(u'[Default]'),   12500),
        (_(u'25% Further'), 15625),
        (_(u'50% Further'), 18750),
        (_(u'75% Further'), 21875),
        (_(u'Custom'),      12500),
        ),
    (_(u'Actor: Unconsciousness Duration'),
     _(u'Time which essential NPCs stay unconscious.'),
        (u'fEssentialDeathTime',),
        (_(u'[10 Seconds]'),        10.0),
        (_(u'20 Seconds'),          20.0),
        (_(u'30 Seconds'),          30.0),
        (_(u'1 Minute'),            60.0),
        (_(u'1 1/2 Minutes'),       1.5*60.0),
        (_(u'2 Minutes'),           2*60.0),
        (_(u'3 Minutes'),           3*60.0),
        (_(u'5 Minutes'),           5*60.0),
        (_(u'Custom (in seconds)'), 10.0),
        ),
    (_(u'Actor: Max Jump Height'),
     _(u'Increases the height to which you can jump.'),
        (u'fJumpHeightMin',),
        (u'0.5x',      38.0),
        (u'[1x]',      76.0),
        (u'2x',        152.0),
        (u'3x',        228.0),
        (u'4x',        304.0),
        (_(u'Custom'), 76.0),
        ),
    (_(u'Camera: PC Death Time'),
     _(u"Time after player's death before reload menu appears."),
        (u'fPlayerDeathReloadTime',),
        (_(u'15 Seconds'), 15.0),
        (_(u'30 Seconds'), 30.0),
        (_(u'1 Minute'),   60.0),
        (_(u'5 Minute'),   300.0),
        (_(u'Unlimited'),  9999999.0),
        (_(u'Custom'),     15.0),
        ),
    (_(u'World: Cell Respawn Time'),
     _(u'Time before unvisited cell respawns. But longer times increase save '
       u'sizes.'),
        (u'iHoursToRespawnCell',),
        (_(u'1 Day'),             24*1),
        (_(u'[3 Days]'),          24*3),
        (_(u'5 Days'),            24*5),
        (_(u'10 Days'),           24*10),
        (_(u'20 Days'),           24*20),
        (_(u'1 Month'),           24*30),
        (_(u'6 Months'),          24*182),
        (_(u'1 Year'),            24*365),
        (_(u'Custom (in hours)'), 72),
        ),
    (_(u'Cost Multiplier: Repair'), _(u'Cost factor for repairing items.'),
        (u'fItemRepairCostMult',),
        (u'1.0',       1.0),
        (u'1.25',      1.25),
        (u'1.5',       1.5),
        (u'1.75',      1.75),
        (u'[2.0]',     2.0),
        (u'2.5',       2.5),
        (u'3.0',       3.0),
        (_(u'Custom'), 2.0),
        ),
    (_(u'Combat: Max Actors'),
     _(u'Maximum number of actors that can actively be in combat with the '
       u'player.'),
        (u'iNumberActorsInCombatPlayer',),
        (u'[10]',      10),
        (u'15',        15),
        (u'20',        20),
        (u'30',        30),
        (u'40',        40),
        (u'50',        50),
        (u'80',        80),
        (_(u'Custom'), 10),
        ),
    (_(u'AI: Max Active Actors'),
     _(u'Maximum actors whose AI can be active. Must be higher than Combat: '
       u'Max Actors.'),
        (u'iAINumberActorsComplexScene',),
        (u'20',        20),
        (u'[25]',      25),
        (u'30',        30),
        (u'35',        35),
        (u'40',        40),
        (u'50',        50),
        (u'60',        60),
        (u'100',       100),
        (_(u'Custom'), 20),
        ),
    (_(u'Actor: Max Companions'),
     _(u'Maximum number of actors following the player.'),
        (u'iNumberActorsAllowedToFollowPlayer',),
        (u'2',         2),
        (u'4',         4),
        (u'[6]',       6),
        (u'8',         8),
        (u'10',        10),
        (_(u'Custom'), 6),
        ),
    (_(u'AI: Max Dead Actors'),
     _(u"Maximum number of dead actors allowed before they're removed."),
        (u'iRemoveExcessDeadCount', u'iRemoveExcessDeadTotalActorCount',
         u'iRemoveExcessDeadComplexTotalActorCount',
         u'iRemoveExcessDeadComplexCount', u'fRemoveExcessDeadTime',
         u'fRemoveExcessComplexDeadTime'),
        (u'[x 1]',     int(15*1)  , int(20*1)  , int(20*1)  , int(3*1), 10.0*1.0, 2.5*1.0),
        (u'x 1.5',     int(15*1.5), int(20*1.5), int(20*1.5), int(3*2), 10.0*3.0, 2.5*3.0),
        (u'x 2',       int(15*2)  , int(20*2)  , int(20*2)  , int(3*3), 10.0*5.0, 2.5*5.0),
        (u'x 2.5',     int(15*2.5), int(20*2.5), int(20*2.5), int(3*4), 10.0*7.0, 2.5*7.0),
        (u'x 3',       int(15*3)  , int(20*3)  , int(20*3)  , int(3*5), 10.0*9.0, 2.5*9.0),
        (u'x 3.5',     int(15*3.5), int(20*3.5), int(20*3.5), int(3*6), 10.0*11.0, 2.5*11.0),
        (u'x 4',       int(15*4)  , int(20*4)  , int(20*4)  , int(3*7), 10.0*13.0, 2.5*13.0),
        (_(u'Custom'), 15, 20, 20, 3, 10, 2.5),
        ),
    (_(u'Player: Inventory Quantity Prompt'),
     _(u'Number of items in a stack at which point the game prompts for a '
       u'quantity.'),
        (u'iInventoryAskQuantityAt',),
        (_(u'Always Prompt'), 1),
        (u'2',                2),
        (u'3',                3),
        (u'4',                4),
        (u'[5]',              5),
        (u'10',               10),
        (u'20',               20),
        (_(u'Never Prompt'),  99999),
        (_(u'Custom'),        5),
        ),
    (_(u'Gore: Combat Dismember Part Chance'),
     _(u'The chance that body parts will be dismembered.'),
        (u'iCombatDismemberPartChance',),
        (u'0',         0),
        (u'25',        25),
        (u'[50]',      50),
        (u'80',        80),
        (u'100',       100),
        (_(u'Custom'), 50),
        ),
    (_(u'Gore: Combat Explode Part Chance'),
     _(u'The chance that body parts will explode.'),
        (u'iCombatExplodePartChance',),
        (u'0',         0),
        (u'25',        25),
        (u'50',        50),
        (u'[75]',      75),
        (u'100',       100),
        (_(u'Custom'), 75),
        ),
    (_(u'Leveled Item Max level difference'),
     _(u'Maximum difference to player level for leveled items.'),
        (u'iLevItemLevelDifferenceMax',),
        (u'1',            1),
        (u'5',            5),
        (u'[8]',          8),
        (u'10',           10),
        (u'20',           20),
        (_(u'Unlimited'), 9999),
        (_(u'Custom'),    8),
        ),
    (_(u'Movement: Base Speed'), _(u'Changes base movement speed.'),
        (u'fMoveBaseSpeed',),
        (u'[77.0]',    77.0),
        (u'90.0',      90.0),
        (_(u'Custom'), 77.0),
        ),
    (_(u'Movement: Sneak Multiplier'),
     _(u'Movement speed is multiplied by this when the actor is sneaking.'),
        (u'fMoveSneakMult',),
        (u'[0.57]',    0.57),
        (u'0.66',      0.66),
        (_(u'Custom'), 0.57),
        ),
    (_(u'Combat: VATS Player Damage Multiplier'),
     _(u'Multiplier of damage that player receives in VATS.'),
        (u'fVATSPlayerDamageMult',),
        (u'0.10',      0.1),
        (u'0.25',      0.25),
        (u'0.50',      0.5),
        (u'[0.75]',    0.75),
        (u'1.00',      1.0),
        (_(u'Custom'), 0.75),
        ),
    (_(u'Combat: Auto Aim Fix'),
     _(u'Increase Auto Aim settings to a level at which snipers can benefit '
       u'from them.'),
        (u'fAutoAimMaxDistance', u'fAutoAimScreenPercentage',
         u'fAutoAimMaxDegrees', u'fAutoAimMissRatioLow',
         u'fAutoAimMissRatioHigh', u'fAutoAimMaxDegreesMiss'),
        (_(u'Harder'), 50000.0, -180.0, 1.1, 1.0, 1.3, 3.0),
        ),
    (_(u'Player: PipBoy Light Keypress Delay'),
     _(u'Seconds of delay until the PipBoy light switches on.'),
        (u'fPlayerPipBoyLightTimer',),
        (u'0.3',       0.3),
        (u'0.4',       0.4),
        (u'0.5',       0.5),
        (u'0.6',       0.6),
        (u'0.7',       0.7),
        (u'[0.8]',     0.8),
        (u'1.0',       1.0),
        (_(u'Custom'), 0.8),
        ),
    (_(u'Combat: VATS Playback Delay'),
     _(u'Seconds of delay after the VATS Camera finished playback.'),
        (u'fVATSPlaybackDelay',),
        (u'0.01',      0.01),
        (u'0.05',      0.05),
        (u'0.10',      0.1),
        (u'[0.17]',    0.17),
        (u'0.25',      0.25),
        (_(u'Custom'), 0.17),
        ),
    (_(u'Combat: NPC Death XP Threshold'),
     _(u'Percentage of total damage you have to inflict in order to get XP.'),
        (u'iXPDeathRewardHealthThreshold',),
        (u'0%',        0),
        (u'25%',       25),
        (u'[40%]',     40),
        (u'50%',       50),
        (u'75%',       75),
        (_(u'Custom'), 40),
        ),
    (_(u'Hacking: Maximum Number of Words'),
     _(u'The maximum number of words appearing in the terminal hacking '
       u'mini-game.'),
        (u'iHackingMaxWords',),
        (u'1',         1),
        (u'4',         4),
        (u'8',         8),
        (u'12',        12),
        (u'16',        16),
        (u'[20]',      20),
        (_(u'Custom'), 20),
        ),
    (_(u'Visuals: Shell Camera Distance'),
     _(u'Maximum distance at which gun arisings (shell case, particle, decal) '
       u'show from camera.'),
        (u'fGunParticleCameraDistance', u'fGunShellCameraDistance',
         u'fGunDecalCameraDistance'),
        (u'x 1.5',     2048.0*1.5, 512.0*1.5, 2048.0*1.5),
        (u'x 2',       2048.0*2.0, 512.0*2.0, 2048.0*2.0),
        (u'x 3',       2048.0*3.0, 512.0*3.0, 2048.0*3.0),
        (u'x 4',       2048.0*4.0, 512.0*4.0, 2048.0*4.0),
        (u'x 5',       2048.0*5.0, 512.0*5.0, 2048.0*5.0),
        (_(u'Custom'), 2048.0*1.0, 512.0*1.0, 2048.0*1.0),
        ),
    (_(u'Visuals: Shell Litter Time'),
     _(u'Time before shell cases fade away from cells.'),
        (u'fGunShellLifetime',),
        (_(u'[10 Seconds]'),        10),
        (_(u'20 Seconds'),          20),
        (_(u'30 Seconds'),          30),
        (_(u'1 Minute'),            60),
        (_(u'3 Minutes'),           60*3),
        (_(u'5 Minutes'),           60*5),
        (_(u'Custom (in seconds)'), 10),
        ),
    (_(u'Visuals: Shell Litter Count'),
     _(u'Maximum number of debris (shell case, etc) allowed in cell.'),
        (u'iDebrisMaxCount',),
        (u'[50]',      50),
        (u'100',       100),
        (u'500',       500),
        (u'1000',      1000),
        (u'3000',      3000),
        (_(u'Custom'), 50),
        ),
    (_(u'Hacking: Terminal Speed Adjustment'),
     _(u'The display speed at the time of terminal hacking.'),
        (u'iHackingDumpRate', u'iHackingInputRate', u'iHackingOutputRate',
         u'iHackingFlashOffDuration', u'iHackingFlashOnDuration',
         u'iComputersDisplayRateMenus', u'iComputersDisplayRateNotes'),
        (u'x 2',       1000, 40,  134, 250, 375, 300, 300),
        (u'x 4',       2000, 80,  268, 125, 188, 600, 600),
        (u'[x 6]',     3000, 120, 402, 83,  126, 900, 900),
        (_(u'Custom'), 3000, 120, 402, 83,  126, 900, 900),
        ),
    (_(u'Player: Max Draggable Weight'),
     _(u'Maximum weight to be able move things with the drag key.'),
        (u'fMoveWeightMax',),
        (u'115',        115.0),
        (u'[150]',      150.0),
        (u'250',        250.0),
        (u'500',        500.0),
        (u'1500',       1500.0),
        (_(u'Custom'),  115.0),
        ),
    ]
#------------------------------------------------------------------------------
# ListsMerger
#------------------------------------------------------------------------------
listTypes = ('LVLC','LVLI','LVLN')

#------------------------------------------------------------------------------
# NamesPatcher
#------------------------------------------------------------------------------
namesTypes = {
    'ACTI', 'ALCH', 'AMMO', 'ARMO', 'AVIF', 'BOOK', 'CLAS', 'COBJ', 'CONT',
    'CREA', 'DOOR', 'EYES', 'FACT', 'HAIR', 'INGR', 'KEYM', 'LIGH', 'MESG',
    'MGEF', 'MISC', 'NOTE', 'NPC_', 'PERK', 'RACE', 'SPEL', 'TACT', 'TERM',
    'WEAP',
}

#------------------------------------------------------------------------------
# ItemPrices Patcher
#------------------------------------------------------------------------------
pricesTypes = {'ALCH': {}, 'AMMO': {}, 'ARMO': {}, 'ARMA': {}, 'BOOK': {},
               'INGR': {}, 'KEYM': {}, 'LIGH': {}, 'MISC': {}, 'WEAP': {}}

#------------------------------------------------------------------------------
# StatsImporter
#------------------------------------------------------------------------------
statsTypes = {
    'ALCH': ('eid', 'weight', 'value'),
    'AMMO': ('eid', 'value', 'speed', 'clipRounds'),
    'ARMA': ('eid', 'weight', 'value', 'health', 'ar'),
    'ARMO': ('eid', 'weight', 'value', 'health', 'ar'),
    'BOOK': ('eid', 'weight', 'value'),
    'INGR': ('eid', 'weight', 'value'),
    'KEYM': ('eid', 'weight', 'value'),
    'LIGH': ('eid', 'weight', 'value', 'duration'),
    'MISC': ('eid', 'weight', 'value'),
    'WEAP': ('eid', 'weight', 'value', 'health', 'damage','clipsize',
             'animationMultiplier','reach','ammoUse','minSpread','spread',
             'sightFov','baseVatsToHitChance','projectileCount','minRange',
             'maxRange','animationAttackMultiplier','fireRate',
             'overrideActionPoint','rumbleLeftMotorStrength',
             'rumbleRightMotorStrength','rumbleDuration',
             'overrideDamageToWeaponMult','attackShotsPerSec','reloadTime',
             'jamTime','aimArc','rambleWavelangth','limbDmgMult',
             'sightUsage','semiAutomaticFireDelayMin',
             'semiAutomaticFireDelayMax','criticalDamage',
             'criticalMultiplier'),
}

statsHeaders = (
    #--Alch
    (u'ALCH',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'))) + u'"\n')),
    #Ammo
    (u'AMMO',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Speed'),_(u'Clip Rounds'),_(u'Proj/Shot'))) + u'"\n')),
    #--Armor
    (u'ARMO',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Health'),_(u'AR'),_(u'DT'))) + u'"\n')),
    #--Armor Addon
    (u'ARMA',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Health'),_(u'AR'))) + u'"\n')),
    #Books
    (u'BOOK',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'))) + u'"\n')),
    #Ingredients
    (u'INGR',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
       _(u'Editor Id'),_(u'Weight'),_(u'Value'))) + u'"\n')),
    #--Keys
    (u'KEYM',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'))) + u'"\n')),
    #Lights
    (u'LIGH',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Duration'))) + u'"\n')),
    #--Misc
    (u'MISC',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'))) + u'"\n')),
    #--Weapons
    (u'WEAP',
        (u'"' + u'","'.join((_(u'Type'),_(u'Mod Name'),_(u'ObjectIndex'),
        _(u'Editor Id'),_(u'Weight'),_(u'Value'),_(u'Health'),_(u'Damage'),
        _(u'Clip Size'),_(u'Animation Multiplier'),_(u'Reach'),_(u'Ammo Use'),
        _(u'Min Spread'),_(u'Spread'),_(u'Sight Fov'),
        _(u'Base VATS To-Hit Chance'), _(u'Projectile Count'),_(u'Min Range'),
        _(u'Max Range'), _(u'Animation Attack Multiplier'), _(u'Fire Rate'),
        _(u'Override - Action Point'), _(u'Rumble - Left Motor Strength'),
        _(u'rRmble - Right Motor Strength'), _(u'Rumble - Duration'),
        _(u'Override - Damage To Weapon Mult'), _(u'Attack Shots/Sec'),
        _(u'Reload Time'), _(u'Jam Time'), _(u'Aim Arc'), _(u'Ramble - Wavelangth'),
        _(u'Limb Dmg Mult'), _(u'Sight Usage'),_(u'Semi-Automatic Fire Delay Min'),
        _(u'Semi-Automatic Fire Delay Max'),_(u'Critical Damage'),
        _(u'Crit % Mult'))) + u'"\n')),
)

#------------------------------------------------------------------------------
# SoundPatcher
#------------------------------------------------------------------------------
# Needs longs in SoundPatcher
soundsLongsTypes = {'ACTI', 'ADDN', 'ALCH', 'ASPC', 'COBJ', 'CONT', 'CREA',
                    'DOOR', 'EXPL', 'IPCT', 'LIGH', 'MGEF', 'PROJ', 'SOUN',
                    'TACT', 'WATR', 'WEAP', 'WTHR'}
soundsTypes = {
    "ACTI": ('soundLooping','soundActivation',),
    "ADDN": ('ambientSound',),
    "ALCH": ('dropSound','pickupSound','soundConsume',),
    "ASPC": ('soundLooping','useSoundFromRegion',),
    "COBJ": ('pickupSound','dropSound',),
    "CONT": ('soundOpen','soundClose',),
    "CREA": ('footWeight','inheritsSoundsFrom','sounds'),
    "DOOR": ('soundOpen','soundClose','soundLoop',),
    "EXPL": ('soundLevel','sound1','sound2',),
    "IPCT": ('soundLevel','sound1','sound2',),
    "LIGH": ('sound',),
    "MGEF": ('castingSound','boltSound','hitSound','areaSound',),
    "PROJ": ('sound','soundCountDown','soundDisable','soundLevel',),
#    "REGN": ('entries.sounds',),
    "SOUN": ('soundFile','minDist','maxDist','freqAdj','flags','staticAtten',
             'stopTime','startTime','point0','point1','point2','point3',
             'point4','reverb','priority','xLoc','yLoc',),
    "TACT": ('sound',),
    "WATR": ('sound',),
    "WEAP": ('pickupSound','dropSound','soundGunShot3D','soundGunShot2D',
             'soundGunShot3DLooping','soundMeleeSwingGunNoAmmo','soundBlock','idleSound',
             'equipSound','unequipSound','soundLevel',),
    "WTHR": ('sounds',),
}

#------------------------------------------------------------------------------
# CellImporter
#------------------------------------------------------------------------------
cellAutoKeys = {u'C.Acoustic', u'C.Climate', u'C.Encounter',
                u'C.ForceHideLand', u'C.ImageSpace', u'C.Light', u'C.Music',
                u'C.Name', u'C.Owner', u'C.RecordFlags', u'C.Regions',
                u'C.Water'} #,u'C.Maps')
cellRecAttrs = {
    u'C.Acoustic': ('acousticSpace',),
    u'C.Climate': ('climate',),
    u'C.Encounter': ('encounterZone',),
    u'C.ForceHideLand': ('fhlFlags',),
    u'C.ImageSpace': ('imageSpace',),
    u'C.Light': ('ambientRed', 'ambientGreen', 'ambientBlue', 'unused1',
                 'directionalRed', 'directionalGreen', 'directionalBlue',
                 'unused2', 'fogRed', 'fogGreen', 'fogBlue', 'unused3',
                 'fogNear', 'fogFar', 'directionalXY', 'directionalZ',
                 'directionalFade', 'fogClip', 'fogPower',
                 'lightTemplate', 'lightInheritFlags'),
    u'C.Music': ('music',),
    u'C.Name': ('full',),
    u'C.Owner': ('ownership',),
    u'C.RecordFlags': ('flags1',), # Yes seems funky but thats the way it is
    u'C.Regions': ('regions',),
    u'C.Water': ('water','waterHeight','waterNoiseTexture',),
}
cellRecFlags = {
    u'C.Acoustic': '',
    u'C.Climate': 'behaveLikeExterior',
    u'C.Encounter': '',
    u'C.ForceHideLand': '',
    u'C.ImageSpace': '',
    u'C.Light': '',
    u'C.Music': '',
    u'C.Name': '',
    u'C.Owner': 'publicPlace',
    u'C.RecordFlags': '',
    u'C.Regions': '',
    u'C.Water': 'hasWater',
}

#------------------------------------------------------------------------------
# GraphicsPatcher
#------------------------------------------------------------------------------
graphicsLongsTypes = {'ACTI', 'ALCH', 'AMMO', 'ARMA', 'ARMO', 'AVIF', 'BOOK',
                      'BPTD', 'CLAS', 'COBJ', 'CREA', 'DOOR', 'EFSH', 'EXPL',
                      'FURN', 'GRAS', 'HDPT', 'INGR', 'IPCT', 'IPDS', 'KEYM',
                      'LIGH', 'LSCR', 'MICN', 'MISC', 'MSTT', 'NOTE', 'NPC_',
                      'PERK', 'PROJ', 'PWAT', 'STAT', 'TACT', 'TERM', 'TREE',
                      'TXST', 'WEAP', 'MGEF',}
graphicsTypes = {
    "ACTI": ('model',),
    "ALCH": ('iconPath','smallIconPath','model',),
    "AMMO": ('iconPath','smallIconPath','model',),
    "ARMA": ('maleBody','maleWorld','maleIconPath','maleSmallIconPath',
             'femaleBody','femaleWorld','femaleIconPath','femaleSmallIconPath',
             'dnamFlags',),
    "ARMO": ('maleBody','maleWorld','maleIconPath','maleSmallIconPath',
             'femaleBody','femaleWorld','femaleIconPath','femaleSmallIconPath',
             'dnamFlags','objectEffect',),
    "AVIF": ('iconPath','smallIconPath',),
    "BOOK": ('iconPath','smallIconPath','model',),
    "BPTD": ('model',),
    "CLAS": ('iconPath',),
    "COBJ": ('iconPath','smallIconPath','model',),
    "CREA": ('model','bodyParts','nift_p','bodyPartData','effect',),
    "DOOR": ('model',),
    "EFSH": ('flags','particleTexture','fillTexture','holesTexture',
    'unused1','memSBlend',
    'memBlendOp','memZFunc','fillRed','fillGreen','fillBlue',
    'unused2','fillAIn','fillAFull','fillAOut','fillAPRatio',
    'fillAAmp','fillAFreq','fillAnimSpdU','fillAnimSpdV','edgeOff',
    'edgeRed','edgeGreen','edgeBlue','unused3','edgeAIn',
    'edgeAFull','edgeAOut','edgeAPRatio','edgeAAmp','edgeAFreq',
    'fillAFRatio','edgeAFRatio','memDBlend','partSBlend',
    'partBlendOp','partZFunc','partDBlend','partBUp',
    'partBFull','partBDown','partBFRatio',
    'partBPRatio','partLTime','partLDelta',
    'partNSpd','partNAcc','partVel1','partVel2',
    'partVel3','partAcc1','partAcc2','partAcc3',
    'partKey1','partKey2','partKey1Time',
    'partKey2Time','key1Red','key1Green',
    'key1Blue','unused4','key2Red','key2Green',
    'key2Blue','unused5','key3Red','key3Green',
    'key3Blue','unused6','key1A','key2A',
    'key3A','key1Time','key2Time','key3Time',
    'partNSpdDelta','partRot',
    'partRotDelta','partRotSpeed',
    'partRotSpeedDelta','addonModels',
    'holesStartTime','holesEndTime',
    'holesStartVal','holesEndVal',
    'edgeWidth','edgeRed','edgeGreen',
    'edgeBlue','unused7','explosionWindSpeed',
    'textureCountU','textureCountV',
    'addonModelsFadeInTime','addonModelsFadeOutTime',
    'addonModelsScaleStart','addonModelsScaleEnd',
    'addonModelsScaleInTime','addonModelsScaleOutTime',),
    "EXPL": ('model','objectEffect','imageSpaceModifier','light',
             'impactDataset','placedImpactObject',),
    "FURN": ('model',),
    "GRAS": ('model',),
    "HDPT": ('model',),
    "INGR": ('iconPath','model',),
    "IPCT": ('model','effectDuration','effectOrientation','angleThreshold',
             'placementRadius','flags','minWidth','maxWidth','minHeight',
             'maxHeight','depth','shininess','parallaxScale','parallaxPasses',
             'decalFlags','red','green','blue','textureSet',),
    "IPDS": ('stone','dirt','grass','metal','wood','organic','cloth','water',
             'hollowMetal','organicBug','organicGlow',),
    "KEYM": ('iconPath','smallIconPath','model',),
    "LIGH": ('iconPath','model','duration','radius','red','green','blue',
             'flags','falloff','fade'),
    "LSCR": ('iconPath',),
    "MGEF": ('iconPath','model','light','effectShader','objectDisplayShader',),
    "MICN": ('iconPath','smallIconPath',),
    "MISC": ('iconPath','smallIconPath','model',),
    "MSTT": ('model',),
    "NOTE": ('iconPath','smallIconPath','model','texture',),
    "NPC_": ('unarmedAttackEffect',),
    "PERK": ('iconPath','smallIconPath',),
    "PROJ": ('model','light','muzzleFlash','explosion','muzzleFlashDuration',
             'fadeDuration','muzzleFlashPath'),
    "PWAT": ('model',),
    "STAT": ('model',),
    "TACT": ('model',),
    "TERM": ('model',),
    "TREE": ('iconPath','model',),
    "TXST": ('baseImage','normalMap','environmentMapMask','growMap',
             'parallaxMap','environmentMap','minWidth','maxWidth',
             'minHeight','maxHeight','depth','shininess','parallaxScale',
             'parallaxPasses','decalFlags','red','green','blue','flags',),
    "WEAP": ('iconPath','smallIconPath','model','objectEffect',
             'shellCasingModel','scopeModel','scopeEffect','worldModel',
             'impactDataset','firstPersonModel','animationType',
             'gripAnimation','reloadAnimation',),
}
graphicsFidTypes = {
    "MGEF": ('effectShader','light','objectDisplayShader',)
}
graphicsModelAttrs = ('model','shellCasingModel','scopeModel','worldModel')

#------------------------------------------------------------------------------
# Inventory Patcher
#------------------------------------------------------------------------------
inventoryTypes = ('CREA','NPC_','CONT',)

#------------------------------------------------------------------------------
# Text Patcher
#------------------------------------------------------------------------------
text_long_types = {'NOTE',}
text_types = {
    'AVIF': ('description',),
    'BOOK': ('text',),
    'CLAS': ('description',),
    'LSCR': ('text',),
    'MESG': ('description',),
    'MGEF': ('text',),
    'NOTE': ('textTopic',),
    'PERK': ('description',),
    # omit RACE - covered by R.Description
    'TERM': ('description',),
}

#------------------------------------------------------------------------------
# Object Bounds Patcher
#------------------------------------------------------------------------------
object_bounds_types = {'ACTI', 'ADDN', 'ALCH', 'AMMO', 'ARMA', 'ARMO', 'ASPC',
                       'BOOK', 'COBJ', 'CONT', 'CREA', 'DOOR', 'EXPL', 'FURN',
                       'GRAS', 'IDLM', 'INGR', 'KEYM', 'LIGH', 'LVLC', 'LVLI',
                       'LVLN', 'MISC', 'MSTT', 'NOTE', 'NPC_', 'PROJ', 'PWAT',
                       'SCOL', 'SOUN', 'STAT', 'TACT', 'TERM', 'TREE', 'TXST',
                       'WEAP'}

#------------------------------------------------------------------------------
# Contents Checker
#------------------------------------------------------------------------------
# Entry types used for CONT, CREA, LVLI and NPC_
_common_entry_types = {'ALCH', 'AMMO', 'ARMO', 'BOOK', 'KEYM', 'LVLI', 'MISC',
                       'NOTE', 'WEAP'}
# These are marked as {?} in xEdit for FO3, absent for FO3's LVLI, and
# completely commented out in xEdit for FNV. Included for now just to be safe.
_common_entry_types |= {'MSTT', 'STAT'}
cc_valid_types = {
    'CONT': _common_entry_types,
    'CREA': _common_entry_types,
    'LVLC': {'CREA', 'LVLC'},
    'LVLN': {'LVLN', 'NPC_'},
    'LVLI': _common_entry_types - {'MSTT', 'STAT'},
    'NPC_': _common_entry_types,
}
cc_passes = (
    (('LVLC', 'LVLN', 'LVLI'), 'entries', 'listId'),
    (('CONT', 'CREA', 'NPC_'), 'items', 'item'),
)

#------------------------------------------------------------------------------
# Scripts Patcher
#------------------------------------------------------------------------------
# In valda's version: 'WEAP', 'ACTI', 'ALCH', 'ARMO', 'BOOK', 'CONT', 'CREA',
#                     'DOOR', 'FURN', 'INGR', 'KEYM', 'LIGH', 'MISC', 'NPC_',
#                     'QUST', 'TERM', 'TACT'
# In valda's FNV version, only 'CCRD' got added
# INGR and COBJ are unused - still including them, see e.g. APPA in Skyrim
scripts_types = {'ACTI', 'ALCH', 'ARMO', 'BOOK', 'COBJ', 'CONT', 'CREA',
                 'DOOR', 'FURN', 'INGR', 'KEYM', 'LIGH', 'MISC', 'NPC_',
                 'QUST', 'TACT', 'TERM', 'WEAP'}

#------------------------------------------------------------------------------
# Destructible Patcher
#------------------------------------------------------------------------------
destructible_types = {'ACTI', 'ALCH', 'AMMO', 'ARMO', 'BOOK', 'CONT', 'CREA',
                      'DOOR', 'FURN', 'KEYM', 'LIGH', 'MISC', 'MSTT', 'NPC_',
                      'PROJ', 'TACT', 'TERM', 'WEAP'}

#------------------------------------------------------------------------------
# Actor Patchers
#------------------------------------------------------------------------------
actor_importer_attrs = {
    'CREA': {
        u'Actors.ACBS': ('barterGold', 'calcMax', 'calcMin', 'dispositionBase',
                         'fatigue', 'flags.allowPCDialogue',
                         'flags.allowPickpocket', 'flags.biped',
                         'flags.cantOpenDoors', 'flags.essential',
                         'flags.flies', 'flags.immobile', 'flags.invulnerable',
                         'flags.isGhost', 'flags.noBloodDecal',
                         'flags.noBloodSpray', 'flags.noCombatInWater',
                         'flags.noHead', 'flags.noKnockDown',
                         'flags.noLeftArm', 'flags.noLowLevel',
                         'flags.noRightArm', 'flags.noRotatingHeadTrack',
                         'flags.noShadow', 'flags.notPushable',
                         'flags.noVATSMelee', 'flags.pcLevelOffset',
                         'flags.respawn', 'flags.swims', 'flags.tiltFrontBack',
                         'flags.tiltLeftRight', 'flags.walks',
                         'flags.weaponAndShield', 'karma', 'level',
                         'speedMultiplier', 'templateFlags',),
        u'Actors.AIData': ('aggression', 'aggroRadius', 'aggroRadiusBehavior',
                           'assistance', 'confidence', 'energyLevel', 'mood',
                           'responsibility', 'services', 'trainLevel',
                           'trainSkill',),
        u'Actors.CombatStyle': ('combatStyle',),
        u'Actors.Skeleton': ('model',),
        u'Actors.Stats': ('agility', 'charisma', 'combatSkill', 'damage',
                          'endurance', 'health', 'intelligence', 'luck',
                          'magicSkill', 'perception', 'stealthSkill',
                          'strength',),
        u'Creatures.Blood': ('impactDataset',),
        u'Creatures.Type': ('creatureType',),
        u'NPC.Class': (),
        u'NPC.Race': (),
    },
    'NPC_': {
        u'Actors.ACBS': ('barterGold', 'calcMax', 'calcMin', 'dispositionBase',
                         'fatigue', 'flags.autoCalc', 'flags.canBeAllRaces',
                         'flags.essential', 'flags.female',
                         'flags.isChargenFacePreset', 'flags.noBloodDecal',
                         'flags.noBloodSpray', 'flags.noKnockDown',
                         'flags.noLowLevel', 'flags.noRotatingHeadTrack',
                         'flags.notPushable', 'flags.noVATSMelee',
                         'flags.pcLevelOffset', 'flags.respawn',
                         'flags.useTemplate', 'karma', 'level',
                         'speedMultiplier', 'templateFlags',),
        u'Actors.AIData': ('aggression', 'aggroRadius', 'aggroRadiusBehavior',
                           'assistance', 'confidence', 'energyLevel', 'mood',
                           'responsibility', 'services', 'trainLevel',
                           'trainSkill',),
        u'Actors.CombatStyle': ('combatStyle',),
        u'Actors.Skeleton': ('model',),
        u'Actors.Stats': ('attributes', 'health', 'skillOffsets',
                          'skillValues'),
        u'Creatures.Blood': (),
        u'Creatures.Type': (),
        u'NPC.Class': ('iclass',),
        u'NPC.Race': ('race',),
    },
}
actor_importer_auto_key = {
    u'Actors.ACBS', u'Actors.AIData', u'Actors.CombatStyle',
    u'Actors.Skeleton', u'Actors.Stats', u'Creatures.Blood', u'Creatures.Type',
    u'NPC.Class', u'NPC.Race',
}
actor_types = ('CREA', 'NPC_')

#------------------------------------------------------------------------------
# Spell Stats Patcher
#------------------------------------------------------------------------------
spell_stats_attrs = ('eid', 'full', 'cost', 'level', 'spellType',)

#------------------------------------------------------------------------------
# Actor Tweaker
#------------------------------------------------------------------------------
actor_tweaks = {
    u'QuietFeetPatcher',
    u'IrresponsibleCreaturesPatcher',
}

#------------------------------------------------------------------------------
# Names Tweaker
#------------------------------------------------------------------------------
body_tags = u'HAGPBFE'

#------------------------------------------------------------------------------
# Relations Patcher
#------------------------------------------------------------------------------
relations_attrs = (u'faction', u'mod', u'group_combat_reaction')
relations_csv_header = u'"%s","%s","%s","%s","%s","%s","%s","%s"\n' % (
    _(u'Main Eid'), _(u'Main Mod'), _(u'Main Object'), _(u'Other Eid'),
    _(u'Other Mod'), _(u'Other Object'), _(u'Modifier'),
    _(u'Group Combat Reaction'))
relations_csv_row_format = u'"%s","%s","0x%06X","%s","%s","0x%06X","%s","%s"\n'

# Record type to name dictionary
record_type_name = {
    'ALCH':_(u'Potions'),
    'AMMO':_(u'Ammo'),
    'ARMA':_(u'Armature'),
    'ARMO':_(u'Armors'),
    'BOOK':_(u'Books'),
    'INGR':_(u'Ingredients'),
    'KEYM':_(u'Keys'),
    'LIGH':_(u'Lights'),
    'MISC':_(u'Misc'),
    'WEAP':_(u'Weapons'),
}
